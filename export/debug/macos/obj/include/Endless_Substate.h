// Generated by Haxe 4.1.5
#ifndef INCLUDED_Endless_Substate
#define INCLUDED_Endless_Substate

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_MusicBeatSubstate
#include <MusicBeatSubstate.h>
#endif
HX_DECLARE_CLASS0(Endless_Substate)
HX_DECLARE_CLASS0(MusicBeatSubstate)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES Endless_Substate_obj : public  ::MusicBeatSubstate_obj
{
	public:
		typedef  ::MusicBeatSubstate_obj super;
		typedef Endless_Substate_obj OBJ_;
		Endless_Substate_obj();

	public:
		enum { _hx_ClassId = 0x7b2565a4 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="Endless_Substate")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"Endless_Substate"); }
		static ::hx::ObjectPtr< Endless_Substate_obj > __new();
		static ::hx::ObjectPtr< Endless_Substate_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Endless_Substate_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Endless_Substate",fc,94,2c,ea); }

		static void __boot();
		static int curSelected;
		static int curDifficulty;
		static  ::Dynamic _endless;
		static ::String song;
		static void loadCurrent(::String songTitle,int difficulty);
		static ::Dynamic loadCurrent_dyn();

		static void saveCurrent(::String songTitle,int difficulty);
		static ::Dynamic saveCurrent_dyn();

		 ::flixel::group::FlxTypedGroup menuItems;
		::Array< ::String > optionShit;
		 ::flixel::FlxSprite sprDifficulty;
		 ::flixel::text::FlxText textSpeed;
		 ::flixel::text::FlxText textRamp;
		bool goingBack;
		Float camLerp;
		Float initSpeed;
		 ::flixel::FlxSprite blackBarThingie;
		bool selectable;
		void update(Float elapsed);

		void changeItem(::hx::Null< int >  huh);
		::Dynamic changeItem_dyn();

		void changeDiff(::hx::Null< int >  change);
		::Dynamic changeDiff_dyn();

		void updateSong();
		::Dynamic updateSong_dyn();

};


#endif /* INCLUDED_Endless_Substate */ 

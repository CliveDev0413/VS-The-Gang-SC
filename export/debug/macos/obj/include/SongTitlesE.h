// Generated by Haxe 4.1.5
#ifndef INCLUDED_SongTitlesE
#define INCLUDED_SongTitlesE

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_d43be964e27993d0_268_new)
HX_DECLARE_CLASS0(SongTitlesE)



class HXCPP_CLASS_ATTRIBUTES SongTitlesE_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SongTitlesE_obj OBJ_;
		SongTitlesE_obj();

	public:
		enum { _hx_ClassId = 0x351845d5 };

		void __construct(::String song);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="SongTitlesE")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"SongTitlesE"); }

		inline static ::hx::ObjectPtr< SongTitlesE_obj > __new(::String song) {
			::hx::ObjectPtr< SongTitlesE_obj > __this = new SongTitlesE_obj();
			__this->__construct(song);
			return __this;
		}

		inline static ::hx::ObjectPtr< SongTitlesE_obj > __alloc(::hx::Ctx *_hx_ctx,::String song) {
			SongTitlesE_obj *__this = (SongTitlesE_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SongTitlesE_obj), true, "SongTitlesE"));
			*(void **)__this = SongTitlesE_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_d43be964e27993d0_268_new)
HXLINE( 270)		( ( ::SongTitlesE)(__this) )->songName = HX_("",00,00,00,00);
HXLINE( 274)		( ( ::SongTitlesE)(__this) )->songName = song;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SongTitlesE_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SongTitlesE",95,00,1d,82); }

		::String songName;
};


#endif /* INCLUDED_SongTitlesE */ 

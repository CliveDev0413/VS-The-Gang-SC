// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Controls
#include <Controls.h>
#endif
#ifndef INCLUDED_DiscordClient
#include <DiscordClient.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_MainMenuState
#include <MainMenuState.h>
#endif
#ifndef INCLUDED_MainVariables
#include <MainVariables.h>
#endif
#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
#ifndef INCLUDED_MusicBeatSubstate
#include <MusicBeatSubstate.h>
#endif
#ifndef INCLUDED_PAGE1settings
#include <PAGE1settings.h>
#endif
#ifndef INCLUDED_PAGE2settings
#include <PAGE2settings.h>
#endif
#ifndef INCLUDED_PAGE6settings
#include <PAGE6settings.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_PlayerSettings
#include <PlayerSettings.h>
#endif
#ifndef INCLUDED_SettingsState
#include <SettingsState.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxCameraFollowStyle
#include <flixel/FlxCameraFollowStyle.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionData
#include <flixel/addons/transition/TransitionData.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxAction
#include <flixel/input/actions/FlxAction.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionDigital
#include <flixel/input/actions/FlxActionDigital.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionSet
#include <flixel/input/actions/FlxActionSet.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSoundGroup
#include <flixel/system/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_text_FlxTextBorderStyle
#include <flixel/text/FlxTextBorderStyle.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimerManager
#include <flixel/util/FlxTimerManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_29_new,"PAGE1settings","new",0x9421a957,"PAGE1settings.new","PAGE1settings.hx",29,0x590f0df9)
static const ::String _hx_array_data_faf6b1e5_2[] = {
	HX_("page",4f,da,51,4a),HX_("resolution",2c,35,49,6d),HX_("fullscreen",3b,3a,b4,f9),HX_("fpsCounter",13,ce,9d,83),HX_("fps",e9,c7,4d,00),HX_("memory",01,cb,bf,04),HX_("brightness",d1,8d,71,65),HX_("gamma",27,87,b6,8e),HX_("filter",b8,1f,35,85),HX_("watermark",a4,af,1e,e0),
};
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_94_createResults,"PAGE1settings","createResults",0x8abf8511,"PAGE1settings.createResults","PAGE1settings.hx",94,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_120_updateResults,"PAGE1settings","updateResults",0x6deb11a4,"PAGE1settings.updateResults","PAGE1settings.hx",120,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_231_update,"PAGE1settings","update",0xfab26172,"PAGE1settings.update","PAGE1settings.hx",231,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_143_update,"PAGE1settings","update",0xfab26172,"PAGE1settings.update","PAGE1settings.hx",143,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_180_update,"PAGE1settings","update",0xfab26172,"PAGE1settings.update","PAGE1settings.hx",180,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_191_update,"PAGE1settings","update",0xfab26172,"PAGE1settings.update","PAGE1settings.hx",191,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_255_changeItem,"PAGE1settings","changeItem",0x0fd23e8c,"PAGE1settings.changeItem","PAGE1settings.hx",255,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_246_changeItem,"PAGE1settings","changeItem",0x0fd23e8c,"PAGE1settings.changeItem","PAGE1settings.hx",246,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_386_changeStuff,"PAGE1settings","changeStuff",0x8a32675b,"PAGE1settings.changeStuff","PAGE1settings.hx",386,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_268_changeStuff,"PAGE1settings","changeStuff",0x8a32675b,"PAGE1settings.changeStuff","PAGE1settings.hx",268,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_310_changeStuff,"PAGE1settings","changeStuff",0x8a32675b,"PAGE1settings.changeStuff","PAGE1settings.hx",310,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_320_changeStuff,"PAGE1settings","changeStuff",0x8a32675b,"PAGE1settings.changeStuff","PAGE1settings.hx",320,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_330_changeStuff,"PAGE1settings","changeStuff",0x8a32675b,"PAGE1settings.changeStuff","PAGE1settings.hx",330,0x590f0df9)
HX_LOCAL_STACK_FRAME(_hx_pos_6c83ccaa28e784ff_392_openSubState,"PAGE1settings","openSubState",0x9ed93684,"PAGE1settings.openSubState","PAGE1settings.hx",392,0x590f0df9)

void PAGE1settings_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_29_new)
HXLINE(  45)		this->camLerp = ((Float)0.32);
HXLINE(  43)		this->fil = 0;
HXLINE(  41)		this->ExplainText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,20,69,(( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) )),HX_("",00,00,00,00),48,null());
HXLINE(  40)		this->ResultText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,20,69,::flixel::FlxG_obj::width,HX_("",00,00,00,00),48,null());
HXLINE(  37)		this->curSelected = 0;
HXLINE(  36)		this->selectedSomethin = false;
HXLINE(  33)		this->optionShit = ::Array_obj< ::String >::fromData( _hx_array_data_faf6b1e5_2,10);
HXLINE(  49)		super::__construct();
HXLINE(  51)		this->persistentDraw = (this->persistentUpdate = true);
HXLINE(  52)		this->destroySubStates = false;
HXLINE(  54)		this->menuItems =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  55)		this->add(this->menuItems);
HXLINE(  57)		::String library = null();
HXDLIN(  57)		::String tex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Options_Buttons",e0,9c,98,cc)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  57)		 ::flixel::graphics::frames::FlxAtlasFrames tex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Options_Buttons",e0,9c,98,cc)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library));
HXLINE(  59)		{
HXLINE(  59)			int _g = 0;
HXDLIN(  59)			int _g1 = this->optionShit->length;
HXDLIN(  59)			while((_g < _g1)){
HXLINE(  59)				_g = (_g + 1);
HXDLIN(  59)				int i = (_g - 1);
HXLINE(  61)				 ::flixel::FlxSprite menuItem =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,800,(30 + (i * 160)),null());
HXLINE(  62)				menuItem->set_frames(tex1);
HXLINE(  63)				menuItem->animation->addByPrefix(HX_("idle",14,a7,b3,45),(this->optionShit->__get(i) + HX_(" idle",34,37,86,b2)),24,true,null(),null());
HXLINE(  64)				menuItem->animation->addByPrefix(HX_("select",fc,1a,33,6a),(this->optionShit->__get(i) + HX_(" select",1c,f3,e1,9c)),24,true,null(),null());
HXLINE(  65)				menuItem->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE(  66)				menuItem->ID = i;
HXLINE(  67)				this->menuItems->add(menuItem).StaticCast<  ::flixel::FlxSprite >();
HXLINE(  68)				menuItem->scrollFactor->set(null(),null());
HXLINE(  69)				menuItem->set_antialiasing(true);
HXLINE(  70)				menuItem->scrollFactor->set_x(( (Float)(0) ));
HXLINE(  71)				menuItem->scrollFactor->set_y(( (Float)(1) ));
HXLINE(  73)				menuItem->set_x(( (Float)(2000) ));
HXLINE(  74)				::flixel::tweens::FlxTween_obj::tween(menuItem, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("x",78,00,00,00),800)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
            			}
            		}
HXLINE(  77)		this->camFollow =  ::flixel::FlxObject_obj::__alloc( HX_CTX ,0,0,1,1);
HXLINE(  78)		this->add(this->camFollow);
HXLINE(  80)		this->changeItem(null());
HXLINE(  82)		this->createResults();
HXLINE(  84)		this->updateResults();
HXLINE(  86)		::flixel::FlxG_obj::camera->follow(this->camFollow,null(),this->camLerp);
HXLINE(  89)		::DiscordClient_obj::changePresence(HX_("Settings page: General",16,c9,a8,3d),null(),null(),null(),null());
            	}

Dynamic PAGE1settings_obj::__CreateEmpty() { return new PAGE1settings_obj; }

void *PAGE1settings_obj::_hx_vtable = 0;

Dynamic PAGE1settings_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PAGE1settings_obj > _hx_result = new PAGE1settings_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PAGE1settings_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x74dde75d) {
		if (inClassId<=(int)0x62817b24) {
			if (inClassId<=(int)0x5661ffbf) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x5661ffbf;
			} else {
				return inClassId==(int)0x62817b24;
			}
		} else {
			return inClassId==(int)0x74dde75d;
		}
	} else {
		if (inClassId<=(int)0x7ccf8994) {
			return inClassId==(int)0x7c795c9f || inClassId==(int)0x7ccf8994;
		} else {
			return inClassId==(int)0x7fce3ab0;
		}
	}
}

void PAGE1settings_obj::createResults(){
            	HX_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_94_createResults)
HXLINE(  95)		this->add(this->ResultText);
HXLINE(  96)		this->ResultText->scrollFactor->set_x(( (Float)(0) ));
HXLINE(  97)		this->ResultText->scrollFactor->set_y(( (Float)(0) ));
HXLINE(  98)		this->ResultText->setFormat(HX_("VCR OSD Mono",be,44,e4,b8),48,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE(  99)		this->ResultText->set_x(( (Float)(-400) ));
HXLINE( 100)		this->ResultText->set_y(( (Float)(350) ));
HXLINE( 101)		{
HXLINE( 101)			 ::flixel::text::FlxText _this = this->ResultText;
HXDLIN( 101)			_this->set_borderStyle(::flixel::text::FlxTextBorderStyle_obj::OUTLINE_dyn());
HXDLIN( 101)			_this->set_borderColor(-16777216);
HXDLIN( 101)			_this->set_borderSize(( (Float)(5) ));
HXDLIN( 101)			_this->set_borderQuality(( (Float)(1) ));
            		}
HXLINE( 102)		this->ResultText->set_alpha(( (Float)(0) ));
HXLINE( 103)		::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
HXLINE( 105)		this->add(this->ExplainText);
HXLINE( 106)		this->ExplainText->scrollFactor->set_x(( (Float)(0) ));
HXLINE( 107)		this->ExplainText->scrollFactor->set_y(( (Float)(0) ));
HXLINE( 108)		this->ExplainText->setFormat(HX_("VCR OSD Mono",be,44,e4,b8),24,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 109)		this->ExplainText->set_alignment(HX_("left",07,08,b0,47));
HXLINE( 110)		this->ExplainText->set_x(( (Float)(20) ));
HXLINE( 111)		this->ExplainText->set_y(( (Float)(624) ));
HXLINE( 112)		{
HXLINE( 112)			 ::flixel::text::FlxText _this1 = this->ExplainText;
HXDLIN( 112)			_this1->set_borderStyle(::flixel::text::FlxTextBorderStyle_obj::OUTLINE_dyn());
HXDLIN( 112)			_this1->set_borderColor(-16777216);
HXDLIN( 112)			_this1->set_borderSize(( (Float)(5) ));
HXDLIN( 112)			_this1->set_borderQuality(( (Float)(1) ));
            		}
HXLINE( 113)		this->ExplainText->set_alpha(( (Float)(0) ));
HXLINE( 114)		::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC0(PAGE1settings_obj,createResults,(void))

void PAGE1settings_obj::updateResults(){
            	HX_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_120_updateResults)
HXDLIN( 120)		::String _hx_switch_0 = ( (::String)(::MainVariables_obj::_variables->__Field(HX_("filter",b8,1f,35,85),::hx::paccDynamic)) );
            		if (  (_hx_switch_0==HX_("deutranopia",78,9c,68,74)) ){
HXLINE( 129)			this->fil = 3;
HXDLIN( 129)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("downer",4f,ad,26,34)) ){
HXLINE( 135)			this->fil = 6;
HXDLIN( 135)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("gameboy",5a,4d,7b,89)) ){
HXLINE( 133)			this->fil = 5;
HXDLIN( 133)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("grayscale",c7,87,37,f3)) ){
HXLINE( 137)			this->fil = 7;
HXDLIN( 137)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("none",b8,12,0a,49)) ){
HXLINE( 123)			this->fil = 0;
HXDLIN( 123)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("protanopia",8d,55,14,1d)) ){
HXLINE( 127)			this->fil = 2;
HXDLIN( 127)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("tritanopia",4f,88,0f,c7)) ){
HXLINE( 125)			this->fil = 1;
HXDLIN( 125)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("virtual boy",77,91,12,2e)) ){
HXLINE( 131)			this->fil = 4;
HXDLIN( 131)			goto _hx_goto_4;
            		}
            		_hx_goto_4:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PAGE1settings_obj,updateResults,(void))

void PAGE1settings_obj::update(Float elapsed){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::PAGE1settings,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::FlxSprite spr){
            			HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_231_update)
HXLINE( 232)			Float a = spr->scale->x;
HXDLIN( 232)			Float a1 = spr->scale->y;
HXDLIN( 232)			spr->scale->set((a + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)0.8) - a))),(a1 + ((((Float)0.4) / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)0.8) - a1))));
HXLINE( 234)			if ((spr->ID == _gthis->curSelected)) {
HXLINE( 236)				 ::flixel::FlxObject _gthis1 = _gthis->camFollow;
HXDLIN( 236)				Float a = _gthis->camFollow->y;
HXDLIN( 236)				Float b = spr->getGraphicMidpoint(null())->y;
HXDLIN( 236)				_gthis1->set_y((a + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (b - a))));
HXLINE( 237)				 ::flixel::FlxObject _gthis2 = _gthis->camFollow;
HXDLIN( 237)				_gthis2->set_x(spr->getGraphicMidpoint(null())->x);
HXLINE( 238)				Float a1 = spr->scale->x;
HXDLIN( 238)				Float a2 = spr->scale->y;
HXDLIN( 238)				spr->scale->set((a1 + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)1.1) - a1))),(a2 + ((((Float)0.4) / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)1.1) - a2))));
            			}
HXLINE( 241)			spr->updateHitbox();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_143_update)
HXLINE( 142)		 ::PAGE1settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 144)		this->super::update(elapsed);
HXLINE( 146)		if (!(this->selectedSomethin)) {
HXLINE( 148)			if (::PlayerSettings_obj::player1->controls->_upP->check()) {
HXLINE( 150)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 150)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 150)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 151)				this->changeItem(-1);
            			}
HXLINE( 154)			if (::PlayerSettings_obj::player1->controls->_downP->check()) {
HXLINE( 156)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 156)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 156)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 157)				this->changeItem(1);
            			}
HXLINE( 160)			if (::PlayerSettings_obj::player1->controls->_leftP->check()) {
HXLINE( 162)				this->changeStuff(-1);
            			}
HXLINE( 165)			if (::PlayerSettings_obj::player1->controls->_rightP->check()) {
HXLINE( 167)				this->changeStuff(1);
            			}
HXLINE( 170)			if (::PlayerSettings_obj::player1->controls->_back->check()) {
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            				void _hx_run( ::flixel::FlxSprite spr){
            					HX_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_180_update)
HXLINE( 181)					spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 182)					::flixel::tweens::FlxTween_obj::tween(spr, ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("x",78,00,00,00),-1000)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
            				}
            				HX_END_LOCAL_FUNC1((void))

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            				void _hx_run( ::flixel::util::FlxTimer tmr){
            					HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_191_update)
HXLINE( 191)					 ::flixel::FlxState nextState =  ::MainMenuState_obj::__alloc( HX_CTX ,null(),null());
HXDLIN( 191)					if (::flixel::FlxG_obj::game->_state->switchTo(nextState)) {
HXLINE( 191)						::flixel::FlxG_obj::game->_requestedState = nextState;
            					}
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 172)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 172)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("cancelMenu",39,a4,43,b7),null());
HXDLIN( 172)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 173)				this->selectedSomethin = true;
HXLINE( 176)				::DiscordClient_obj::changePresence(HX_("Back to the main menu I go!",cd,8a,d1,a7),null(),null(),null(),null());
HXLINE( 179)				this->menuItems->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 185)				::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("zoom",13,a3,f8,50),7)),((Float)0.5), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("startDelay",c1,af,3d,f3),((Float)0.2))
            					->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 186)				::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 187)				::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 189)				 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.3), ::Dynamic(new _hx_Closure_1()),null());
            			}
            		}
HXLINE( 196)		::String _hx_switch_0 = this->optionShit->__get(this->curSelected);
            		if (  (_hx_switch_0==HX_("brightness",d1,8d,71,65)) ){
HXLINE( 217)			this->ResultText->set_text(((( (Float)(::MainVariables_obj::_variables->__Field(HX_("brightness",d1,8d,71,65),::hx::paccDynamic)) ) / ( (Float)(2) )) + HX_("%",25,00,00,00)));
HXLINE( 218)			this->ExplainText->set_text(HX_("BRIGHTNESS: \nChange how bright your game looks.",b4,d8,57,a4));
HXLINE( 216)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("filter",b8,1f,35,85)) ){
HXLINE( 214)			this->ResultText->set_text(( (::String)(::MainVariables_obj::_variables->__Field(HX_("filter",b8,1f,35,85),::hx::paccDynamic)) ));
HXLINE( 215)			this->ExplainText->set_text(HX_("FILTER: \nChange how colors of the game work, either for fun or if you're colorblind.",99,f0,42,5e));
HXLINE( 213)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("fps",e9,c7,4d,00)) ){
HXLINE( 208)			this->ResultText->set_text(( (::String)((::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic) + HX_(" FPS",a9,37,5c,15))) ));
HXLINE( 209)			this->ExplainText->set_text(HX_("FPS CAP:\nChange your FPS cap when you want some smoother footage.",4c,07,31,55));
HXLINE( 207)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("fpsCounter",13,ce,9d,83)) ){
HXLINE( 205)			 ::flixel::text::FlxText _hx_tmp = this->ResultText;
HXDLIN( 205)			_hx_tmp->set_text(::Std_obj::string( ::Dynamic(::MainVariables_obj::_variables->__Field(HX_("fpsCounter",13,ce,9d,83),::hx::paccDynamic))).toUpperCase());
HXLINE( 206)			this->ExplainText->set_text(HX_("FPS COUNTER:\nToggle your FPS counter on or off.",8c,d9,99,ca));
HXLINE( 204)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("fullscreen",3b,3a,b4,f9)) ){
HXLINE( 202)			 ::flixel::text::FlxText _hx_tmp = this->ResultText;
HXDLIN( 202)			_hx_tmp->set_text(::Std_obj::string( ::Dynamic(::MainVariables_obj::_variables->__Field(HX_("fullscreen",3b,3a,b4,f9),::hx::paccDynamic))).toUpperCase());
HXLINE( 203)			this->ExplainText->set_text(HX_("FULLSCREEN:\nMake your game stretch to your entire screen.",3e,38,51,f7));
HXLINE( 201)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("gamma",27,87,b6,8e)) ){
HXLINE( 220)			this->ResultText->set_text((((( (Float)(::MainVariables_obj::_variables->__Field(HX_("gamma",27,87,b6,8e),::hx::paccDynamic)) ) / ( (Float)(1) )) * ( (Float)(100) )) + HX_("%",25,00,00,00)));
HXLINE( 221)			this->ExplainText->set_text(HX_("GAMMA: \nChange how vibrant your game looks.",da,5e,35,f5));
HXLINE( 219)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("memory",01,cb,bf,04)) ){
HXLINE( 223)			 ::flixel::text::FlxText _hx_tmp = this->ResultText;
HXDLIN( 223)			_hx_tmp->set_text(::Std_obj::string( ::Dynamic(::MainVariables_obj::_variables->__Field(HX_("memory",01,cb,bf,04),::hx::paccDynamic))).toUpperCase());
HXLINE( 224)			this->ExplainText->set_text(HX_("MEMORY: \nSee how your memory's acting in game.",cb,88,18,43));
HXLINE( 222)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("page",4f,da,51,4a)) ){
HXLINE( 211)			this->ResultText->set_text(HX_("GENERAL",08,3f,2f,36));
HXLINE( 212)			this->ExplainText->set_text(HX_("Previous Page: CLEAR \nNext Page: SFX",fc,ef,cc,e7));
HXLINE( 210)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("resolution",2c,35,49,6d)) ){
HXLINE( 199)			this->ResultText->set_text((((( (Float)(::flixel::FlxG_obj::width) ) * ( (Float)(::MainVariables_obj::_variables->__Field(HX_("resolution",2c,35,49,6d),::hx::paccDynamic)) )) + HX_("x",78,00,00,00)) + (( (Float)(::flixel::FlxG_obj::height) ) * ( (Float)(::MainVariables_obj::_variables->__Field(HX_("resolution",2c,35,49,6d),::hx::paccDynamic)) ))));
HXLINE( 200)			this->ExplainText->set_text(HX_("RESOLUTION:\nChange the resolution of your game.",27,13,10,e7));
HXLINE( 198)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("watermark",a4,af,1e,e0)) ){
HXLINE( 226)			 ::flixel::text::FlxText _hx_tmp = this->ResultText;
HXDLIN( 226)			_hx_tmp->set_text(::Std_obj::string( ::Dynamic(::MainVariables_obj::_variables->__Field(HX_("watermark",a4,af,1e,e0),::hx::paccDynamic))).toUpperCase());
HXLINE( 227)			this->ExplainText->set_text(HX_("WATERMARK: \nSwitch your watermark on or off.",18,d9,ec,d5));
HXLINE( 225)			goto _hx_goto_6;
            		}
            		_hx_goto_6:;
HXLINE( 230)		this->menuItems->forEach( ::Dynamic(new _hx_Closure_2(_gthis)),null());
            	}


void PAGE1settings_obj::changeItem(::hx::Null< int >  __o_huh){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::PAGE1settings,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::FlxSprite spr){
            			HX_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_255_changeItem)
HXLINE( 256)			spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 258)			if ((spr->ID == _gthis->curSelected)) {
HXLINE( 260)				spr->animation->play(HX_("select",fc,1a,33,6a),null(),null(),null());
            			}
HXLINE( 263)			spr->updateHitbox();
            		}
            		HX_END_LOCAL_FUNC1((void))

            		int huh = __o_huh.Default(0);
            	HX_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_246_changeItem)
HXLINE( 245)		 ::PAGE1settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 247)		 ::PAGE1settings _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 247)		_hx_tmp->curSelected = (_hx_tmp->curSelected + huh);
HXLINE( 249)		if ((this->curSelected >= this->menuItems->length)) {
HXLINE( 250)			this->curSelected = 0;
            		}
HXLINE( 251)		if ((this->curSelected < 0)) {
HXLINE( 252)			this->curSelected = (this->menuItems->length - 1);
            		}
HXLINE( 254)		this->menuItems->forEach( ::Dynamic(new _hx_Closure_0(_gthis)),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(PAGE1settings_obj,changeItem,(void))

void PAGE1settings_obj::changeStuff(::hx::Null< int >  __o_Change){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(1)
            		void _hx_run( ::flixel::util::FlxTimer tmr){
            			HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_386_changeStuff)
HXLINE( 386)			::MainVariables_obj::Save();
            		}
            		HX_END_LOCAL_FUNC1((void))

            		int Change = __o_Change.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_268_changeStuff)
HXLINE( 267)		 ::PAGE1settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 269)		::String _hx_switch_0 = this->optionShit->__get(this->curSelected);
            		if (  (_hx_switch_0==HX_("brightness",d1,8d,71,65)) ){
HXLINE( 365)			 ::Dynamic _hx_tmp = ::MainVariables_obj::_variables;
HXDLIN( 365)			_hx_tmp->__SetField(HX_("brightness",d1,8d,71,65),(_hx_tmp->__Field(HX_("brightness",d1,8d,71,65),::hx::paccDynamic) + (Change * 10)),::hx::paccDynamic);
HXLINE( 366)			if (::hx::IsLess( ::MainVariables_obj::_variables->__Field(HX_("brightness",d1,8d,71,65),::hx::paccDynamic),-200 )) {
HXLINE( 367)				::MainVariables_obj::_variables->__SetField(HX_("brightness",d1,8d,71,65),-200,::hx::paccDynamic);
            			}
HXLINE( 368)			if (::hx::IsGreater( ::MainVariables_obj::_variables->__Field(HX_("brightness",d1,8d,71,65),::hx::paccDynamic),200 )) {
HXLINE( 369)				::MainVariables_obj::_variables->__SetField(HX_("brightness",d1,8d,71,65),200,::hx::paccDynamic);
            			}
HXLINE( 371)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 371)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 371)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 372)			::MainVariables_obj::UpdateColors();
HXLINE( 364)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("filter",b8,1f,35,85)) ){
HXLINE( 336)			 ::PAGE1settings _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 336)			_hx_tmp->fil = (_hx_tmp->fil + Change);
HXLINE( 337)			if ((this->fil > 7)) {
HXLINE( 338)				this->fil = 0;
            			}
HXLINE( 339)			if ((this->fil < 0)) {
HXLINE( 340)				this->fil = 7;
            			}
HXLINE( 342)			switch((int)(this->fil)){
            				case (int)0: {
HXLINE( 345)					::MainVariables_obj::_variables->__SetField(HX_("filter",b8,1f,35,85),HX_("none",b8,12,0a,49),::hx::paccDynamic);
            				}
            				break;
            				case (int)1: {
HXLINE( 347)					::MainVariables_obj::_variables->__SetField(HX_("filter",b8,1f,35,85),HX_("tritanopia",4f,88,0f,c7),::hx::paccDynamic);
            				}
            				break;
            				case (int)2: {
HXLINE( 349)					::MainVariables_obj::_variables->__SetField(HX_("filter",b8,1f,35,85),HX_("protanopia",8d,55,14,1d),::hx::paccDynamic);
            				}
            				break;
            				case (int)3: {
HXLINE( 351)					::MainVariables_obj::_variables->__SetField(HX_("filter",b8,1f,35,85),HX_("deutranopia",78,9c,68,74),::hx::paccDynamic);
            				}
            				break;
            				case (int)4: {
HXLINE( 353)					::MainVariables_obj::_variables->__SetField(HX_("filter",b8,1f,35,85),HX_("virtual boy",77,91,12,2e),::hx::paccDynamic);
            				}
            				break;
            				case (int)5: {
HXLINE( 355)					::MainVariables_obj::_variables->__SetField(HX_("filter",b8,1f,35,85),HX_("gameboy",5a,4d,7b,89),::hx::paccDynamic);
            				}
            				break;
            				case (int)6: {
HXLINE( 357)					::MainVariables_obj::_variables->__SetField(HX_("filter",b8,1f,35,85),HX_("downer",4f,ad,26,34),::hx::paccDynamic);
            				}
            				break;
            				case (int)7: {
HXLINE( 359)					::MainVariables_obj::_variables->__SetField(HX_("filter",b8,1f,35,85),HX_("grayscale",c7,87,37,f3),::hx::paccDynamic);
            				}
            				break;
            			}
HXLINE( 362)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 362)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 362)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 363)			::MainVariables_obj::UpdateColors();
HXLINE( 335)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("fps",e9,c7,4d,00)) ){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_310_changeStuff)
HXLINE( 311)				::flixel::FlxG_obj::set_drawFramerate(( (int)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ));
HXLINE( 312)				::flixel::FlxG_obj::set_updateFramerate(( (int)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ));
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 302)			 ::Dynamic _hx_tmp = ::MainVariables_obj::_variables;
HXDLIN( 302)			_hx_tmp->__SetField(HX_("fps",e9,c7,4d,00),(_hx_tmp->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic) + (10 * Change)),::hx::paccDynamic);
HXLINE( 303)			if (::hx::IsLess( ::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic),60 )) {
HXLINE( 304)				::MainVariables_obj::_variables->__SetField(HX_("fps",e9,c7,4d,00),60,::hx::paccDynamic);
            			}
HXLINE( 305)			if (::hx::IsGreater( ::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic),480 )) {
HXLINE( 306)				::MainVariables_obj::_variables->__SetField(HX_("fps",e9,c7,4d,00),480,::hx::paccDynamic);
            			}
HXLINE( 308)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 308)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 308)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 309)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.1), ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 301)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("fpsCounter",13,ce,9d,83)) ){
HXLINE( 287)			::MainVariables_obj::_variables->__SetField(HX_("fpsCounter",13,ce,9d,83),!(( (bool)(::MainVariables_obj::_variables->__Field(HX_("fpsCounter",13,ce,9d,83),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 289)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 289)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 289)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 290)			::Main_obj::toggleFPS(( (bool)(::MainVariables_obj::_variables->__Field(HX_("fpsCounter",13,ce,9d,83),::hx::paccDynamic)) ));
HXLINE( 286)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("fullscreen",3b,3a,b4,f9)) ){
HXLINE( 282)			::MainVariables_obj::_variables->__SetField(HX_("fullscreen",3b,3a,b4,f9),!(( (bool)(::MainVariables_obj::_variables->__Field(HX_("fullscreen",3b,3a,b4,f9),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 284)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 284)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 284)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 285)			::flixel::FlxG_obj::set_fullscreen(( (bool)(::MainVariables_obj::_variables->__Field(HX_("fullscreen",3b,3a,b4,f9),::hx::paccDynamic)) ));
HXLINE( 281)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("gamma",27,87,b6,8e)) ){
HXLINE( 374)			 ::Dynamic _hx_tmp = ::MainVariables_obj::_variables;
HXDLIN( 374)			_hx_tmp->__SetField(HX_("gamma",27,87,b6,8e),(_hx_tmp->__Field(HX_("gamma",27,87,b6,8e),::hx::paccDynamic) + (( (Float)(Change) ) / ( (Float)(10) ))),::hx::paccDynamic);
HXLINE( 375)			if (::hx::IsLess( ::MainVariables_obj::_variables->__Field(HX_("gamma",27,87,b6,8e),::hx::paccDynamic),((Float)0.1) )) {
HXLINE( 376)				::MainVariables_obj::_variables->__SetField(HX_("gamma",27,87,b6,8e),((Float)0.1),::hx::paccDynamic);
            			}
HXLINE( 377)			if (::hx::IsGreater( ::MainVariables_obj::_variables->__Field(HX_("gamma",27,87,b6,8e),::hx::paccDynamic),5 )) {
HXLINE( 378)				::MainVariables_obj::_variables->__SetField(HX_("gamma",27,87,b6,8e),5,::hx::paccDynamic);
            			}
HXLINE( 380)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 380)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 380)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 381)			::MainVariables_obj::UpdateColors();
HXLINE( 373)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("memory",01,cb,bf,04)) ){
HXLINE( 292)			::MainVariables_obj::_variables->__SetField(HX_("memory",01,cb,bf,04),!(( (bool)(::MainVariables_obj::_variables->__Field(HX_("memory",01,cb,bf,04),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 294)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 294)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 294)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 295)			::Main_obj::toggleMem(( (bool)(::MainVariables_obj::_variables->__Field(HX_("memory",01,cb,bf,04),::hx::paccDynamic)) ));
HXLINE( 291)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("page",4f,da,51,4a)) ){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            			void _hx_run( ::flixel::FlxSprite spr){
            				HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_320_changeStuff)
HXLINE( 321)				spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 322)				::flixel::tweens::FlxTween_obj::tween(spr, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("x",78,00,00,00),-1000)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_2, ::PAGE1settings,_gthis,int,Change) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_330_changeStuff)
HXLINE( 330)				if ((Change == 1)) {
HXLINE( 331)					 ::PAGE1settings _gthis1 = _gthis;
HXDLIN( 331)					_gthis1->openSubState( ::PAGE2settings_obj::__alloc( HX_CTX ));
            				}
            				else {
HXLINE( 333)					 ::PAGE1settings _gthis1 = _gthis;
HXDLIN( 333)					_gthis1->openSubState( ::PAGE6settings_obj::__alloc( HX_CTX ));
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 315)			 ::Dynamic _hx_tmp = ::hx::ClassOf< ::SettingsState >();
HXDLIN( 315)			::SettingsState_obj::page = (::SettingsState_obj::page + Change);
HXLINE( 316)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 316)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 316)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 317)			this->selectedSomethin = true;
HXLINE( 319)			this->menuItems->forEach( ::Dynamic(new _hx_Closure_1()),null());
HXLINE( 325)			::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 326)			::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 328)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_2(_gthis,Change)),null());
HXLINE( 314)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("resolution",2c,35,49,6d)) ){
HXLINE( 272)			 ::Dynamic _hx_tmp = ::MainVariables_obj::_variables;
HXDLIN( 272)			_hx_tmp->__SetField(HX_("resolution",2c,35,49,6d),(_hx_tmp->__Field(HX_("resolution",2c,35,49,6d),::hx::paccDynamic) + (( (Float)(Change) ) / ( (Float)(2) ))),::hx::paccDynamic);
HXLINE( 273)			if (::hx::IsLess( ::MainVariables_obj::_variables->__Field(HX_("resolution",2c,35,49,6d),::hx::paccDynamic),1 )) {
HXLINE( 274)				::MainVariables_obj::_variables->__SetField(HX_("resolution",2c,35,49,6d),1,::hx::paccDynamic);
            			}
HXLINE( 276)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 276)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 276)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 277)			::flixel::FlxG_obj::resizeWindow(::Math_obj::round((( (Float)(::flixel::FlxG_obj::width) ) * ( (Float)(::MainVariables_obj::_variables->__Field(HX_("resolution",2c,35,49,6d),::hx::paccDynamic)) ))),::Math_obj::round((( (Float)(::flixel::FlxG_obj::height) ) * ( (Float)(::MainVariables_obj::_variables->__Field(HX_("resolution",2c,35,49,6d),::hx::paccDynamic)) ))));
HXLINE( 279)			::flixel::FlxG_obj::set_fullscreen(false);
HXLINE( 280)			::flixel::FlxG_obj::set_fullscreen(( (bool)(::MainVariables_obj::_variables->__Field(HX_("fullscreen",3b,3a,b4,f9),::hx::paccDynamic)) ));
HXLINE( 271)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("watermark",a4,af,1e,e0)) ){
HXLINE( 297)			::MainVariables_obj::_variables->__SetField(HX_("watermark",a4,af,1e,e0),!(( (bool)(::MainVariables_obj::_variables->__Field(HX_("watermark",a4,af,1e,e0),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 299)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 299)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 299)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 300)			::Main_obj::watermark->set_visible(( (bool)(::MainVariables_obj::_variables->__Field(HX_("watermark",a4,af,1e,e0),::hx::paccDynamic)) ));
HXLINE( 296)			goto _hx_goto_13;
            		}
            		_hx_goto_13:;
HXLINE( 384)		 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_3()),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(PAGE1settings_obj,changeStuff,(void))

void PAGE1settings_obj::openSubState( ::flixel::FlxSubState SubState){
            	HX_STACKFRAME(&_hx_pos_6c83ccaa28e784ff_392_openSubState)
HXDLIN( 392)		this->super::openSubState(SubState);
            	}



::hx::ObjectPtr< PAGE1settings_obj > PAGE1settings_obj::__new() {
	::hx::ObjectPtr< PAGE1settings_obj > __this = new PAGE1settings_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PAGE1settings_obj > PAGE1settings_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PAGE1settings_obj *__this = (PAGE1settings_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PAGE1settings_obj), true, "PAGE1settings"));
	*(void **)__this = PAGE1settings_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PAGE1settings_obj::PAGE1settings_obj()
{
}

void PAGE1settings_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PAGE1settings);
	HX_MARK_MEMBER_NAME(menuItems,"menuItems");
	HX_MARK_MEMBER_NAME(optionShit,"optionShit");
	HX_MARK_MEMBER_NAME(grpSongs,"grpSongs");
	HX_MARK_MEMBER_NAME(selectedSomethin,"selectedSomethin");
	HX_MARK_MEMBER_NAME(curSelected,"curSelected");
	HX_MARK_MEMBER_NAME(camFollow,"camFollow");
	HX_MARK_MEMBER_NAME(ResultText,"ResultText");
	HX_MARK_MEMBER_NAME(ExplainText,"ExplainText");
	HX_MARK_MEMBER_NAME(fil,"fil");
	HX_MARK_MEMBER_NAME(camLerp,"camLerp");
	 ::flixel::FlxSubState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void PAGE1settings_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(menuItems,"menuItems");
	HX_VISIT_MEMBER_NAME(optionShit,"optionShit");
	HX_VISIT_MEMBER_NAME(grpSongs,"grpSongs");
	HX_VISIT_MEMBER_NAME(selectedSomethin,"selectedSomethin");
	HX_VISIT_MEMBER_NAME(curSelected,"curSelected");
	HX_VISIT_MEMBER_NAME(camFollow,"camFollow");
	HX_VISIT_MEMBER_NAME(ResultText,"ResultText");
	HX_VISIT_MEMBER_NAME(ExplainText,"ExplainText");
	HX_VISIT_MEMBER_NAME(fil,"fil");
	HX_VISIT_MEMBER_NAME(camLerp,"camLerp");
	 ::flixel::FlxSubState_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val PAGE1settings_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"fil") ) { return ::hx::Val( fil ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"camLerp") ) { return ::hx::Val( camLerp ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"grpSongs") ) { return ::hx::Val( grpSongs ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"menuItems") ) { return ::hx::Val( menuItems ); }
		if (HX_FIELD_EQ(inName,"camFollow") ) { return ::hx::Val( camFollow ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"optionShit") ) { return ::hx::Val( optionShit ); }
		if (HX_FIELD_EQ(inName,"ResultText") ) { return ::hx::Val( ResultText ); }
		if (HX_FIELD_EQ(inName,"changeItem") ) { return ::hx::Val( changeItem_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"curSelected") ) { return ::hx::Val( curSelected ); }
		if (HX_FIELD_EQ(inName,"ExplainText") ) { return ::hx::Val( ExplainText ); }
		if (HX_FIELD_EQ(inName,"changeStuff") ) { return ::hx::Val( changeStuff_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"openSubState") ) { return ::hx::Val( openSubState_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"createResults") ) { return ::hx::Val( createResults_dyn() ); }
		if (HX_FIELD_EQ(inName,"updateResults") ) { return ::hx::Val( updateResults_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"selectedSomethin") ) { return ::hx::Val( selectedSomethin ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PAGE1settings_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"fil") ) { fil=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"camLerp") ) { camLerp=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"grpSongs") ) { grpSongs=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"menuItems") ) { menuItems=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"camFollow") ) { camFollow=inValue.Cast<  ::flixel::FlxObject >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"optionShit") ) { optionShit=inValue.Cast< ::Array< ::String > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ResultText") ) { ResultText=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"curSelected") ) { curSelected=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ExplainText") ) { ExplainText=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"selectedSomethin") ) { selectedSomethin=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PAGE1settings_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("menuItems",e1,15,e5,5c));
	outFields->push(HX_("optionShit",d5,2d,ee,91));
	outFields->push(HX_("grpSongs",d9,dc,c7,63));
	outFields->push(HX_("selectedSomethin",c8,ec,fb,99));
	outFields->push(HX_("curSelected",fb,eb,ab,32));
	outFields->push(HX_("camFollow",e0,6e,47,22));
	outFields->push(HX_("ResultText",4a,98,ea,b4));
	outFields->push(HX_("ExplainText",e4,d8,c2,94));
	outFields->push(HX_("fil",c9,c1,4d,00));
	outFields->push(HX_("camLerp",26,66,a1,d2));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PAGE1settings_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(PAGE1settings_obj,menuItems),HX_("menuItems",e1,15,e5,5c)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(PAGE1settings_obj,optionShit),HX_("optionShit",d5,2d,ee,91)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(PAGE1settings_obj,grpSongs),HX_("grpSongs",d9,dc,c7,63)},
	{::hx::fsBool,(int)offsetof(PAGE1settings_obj,selectedSomethin),HX_("selectedSomethin",c8,ec,fb,99)},
	{::hx::fsInt,(int)offsetof(PAGE1settings_obj,curSelected),HX_("curSelected",fb,eb,ab,32)},
	{::hx::fsObject /*  ::flixel::FlxObject */ ,(int)offsetof(PAGE1settings_obj,camFollow),HX_("camFollow",e0,6e,47,22)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(PAGE1settings_obj,ResultText),HX_("ResultText",4a,98,ea,b4)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(PAGE1settings_obj,ExplainText),HX_("ExplainText",e4,d8,c2,94)},
	{::hx::fsInt,(int)offsetof(PAGE1settings_obj,fil),HX_("fil",c9,c1,4d,00)},
	{::hx::fsFloat,(int)offsetof(PAGE1settings_obj,camLerp),HX_("camLerp",26,66,a1,d2)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PAGE1settings_obj_sStaticStorageInfo = 0;
#endif

static ::String PAGE1settings_obj_sMemberFields[] = {
	HX_("menuItems",e1,15,e5,5c),
	HX_("optionShit",d5,2d,ee,91),
	HX_("grpSongs",d9,dc,c7,63),
	HX_("selectedSomethin",c8,ec,fb,99),
	HX_("curSelected",fb,eb,ab,32),
	HX_("camFollow",e0,6e,47,22),
	HX_("ResultText",4a,98,ea,b4),
	HX_("ExplainText",e4,d8,c2,94),
	HX_("fil",c9,c1,4d,00),
	HX_("camLerp",26,66,a1,d2),
	HX_("createResults",5a,31,9a,53),
	HX_("updateResults",ed,bd,c5,36),
	HX_("update",09,86,05,87),
	HX_("changeItem",a3,fa,08,20),
	HX_("changeStuff",64,3f,e0,a9),
	HX_("openSubState",5b,66,48,37),
	::String(null()) };

::hx::Class PAGE1settings_obj::__mClass;

void PAGE1settings_obj::__register()
{
	PAGE1settings_obj _hx_dummy;
	PAGE1settings_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("PAGE1settings",e5,b1,f6,fa);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PAGE1settings_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PAGE1settings_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PAGE1settings_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PAGE1settings_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}


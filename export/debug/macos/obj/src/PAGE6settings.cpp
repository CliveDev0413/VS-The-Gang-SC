// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Controls
#include <Controls.h>
#endif
#ifndef INCLUDED_DiscordClient
#include <DiscordClient.h>
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_MainMenuState
#include <MainMenuState.h>
#endif
#ifndef INCLUDED_MainVariables
#include <MainVariables.h>
#endif
#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
#ifndef INCLUDED_MusicBeatSubstate
#include <MusicBeatSubstate.h>
#endif
#ifndef INCLUDED_PAGE1settings
#include <PAGE1settings.h>
#endif
#ifndef INCLUDED_PAGE5settings
#include <PAGE5settings.h>
#endif
#ifndef INCLUDED_PAGE6settings
#include <PAGE6settings.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_PlayerSettings
#include <PlayerSettings.h>
#endif
#ifndef INCLUDED_SettingsState
#include <SettingsState.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxCameraFollowStyle
#include <flixel/FlxCameraFollowStyle.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionData
#include <flixel/addons/transition/TransitionData.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxAction
#include <flixel/input/actions/FlxAction.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionDigital
#include <flixel/input/actions/FlxActionDigital.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionSet
#include <flixel/input/actions/FlxActionSet.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSoundGroup
#include <flixel/system/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_text_FlxTextBorderStyle
#include <flixel/text/FlxTextBorderStyle.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimerManager
#include <flixel/util/FlxTimerManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl_Lib
#include <openfl/Lib.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_MovieClip
#include <openfl/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a896d25500a6c910_33_new,"PAGE6settings","new",0xf0e41cdc,"PAGE6settings.new","PAGE6settings.hx",33,0xa1cc3214)
static const ::String _hx_array_data_19adbeea_2[] = {
	HX_("page",4f,da,51,4a),HX_("save",3d,8b,4d,4c),HX_("config",c2,56,d2,c7),
};
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_94_createResults,"PAGE6settings","createResults",0x0bbd70d6,"PAGE6settings.createResults","PAGE6settings.hx",94,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_190_update,"PAGE6settings","update",0xdea32f0d,"PAGE6settings.update","PAGE6settings.hx",190,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_118_update,"PAGE6settings","update",0xdea32f0d,"PAGE6settings.update","PAGE6settings.hx",118,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_160_update,"PAGE6settings","update",0xdea32f0d,"PAGE6settings.update","PAGE6settings.hx",160,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_171_update,"PAGE6settings","update",0xdea32f0d,"PAGE6settings.update","PAGE6settings.hx",171,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_214_changeItem,"PAGE6settings","changeItem",0x0fc975a7,"PAGE6settings.changeItem","PAGE6settings.hx",214,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_205_changeItem,"PAGE6settings","changeItem",0x0fc975a7,"PAGE6settings.changeItem","PAGE6settings.hx",205,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_255_changePress,"PAGE6settings","changePress",0xc6f9246f,"PAGE6settings.changePress","PAGE6settings.hx",255,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_227_changePress,"PAGE6settings","changePress",0xc6f9246f,"PAGE6settings.changePress","PAGE6settings.hx",227,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_236_changePress,"PAGE6settings","changePress",0xc6f9246f,"PAGE6settings.changePress","PAGE6settings.hx",236,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_246_changePress,"PAGE6settings","changePress",0xc6f9246f,"PAGE6settings.changePress","PAGE6settings.hx",246,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_261_clearStuff,"PAGE6settings","clearStuff",0x48e5512b,"PAGE6settings.clearStuff","PAGE6settings.hx",261,0xa1cc3214)
HX_LOCAL_STACK_FRAME(_hx_pos_a896d25500a6c910_285_openSubState,"PAGE6settings","openSubState",0xf460aa5f,"PAGE6settings.openSubState","PAGE6settings.hx",285,0xa1cc3214)

void PAGE6settings_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_a896d25500a6c910_33_new)
HXLINE(  47)		this->camLerp = ((Float)0.32);
HXLINE(  45)		this->ExplainText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,20,69,(( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) )),HX_("",00,00,00,00),48,null());
HXLINE(  44)		this->ResultText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,20,69,::flixel::FlxG_obj::width,HX_("",00,00,00,00),48,null());
HXLINE(  41)		this->curSelected = 0;
HXLINE(  40)		this->selectedSomethin = false;
HXLINE(  37)		this->optionShit = ::Array_obj< ::String >::fromData( _hx_array_data_19adbeea_2,3);
HXLINE(  51)		super::__construct();
HXLINE(  53)		this->persistentDraw = (this->persistentUpdate = true);
HXLINE(  54)		this->destroySubStates = false;
HXLINE(  56)		this->menuItems =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  57)		this->add(this->menuItems);
HXLINE(  59)		::String library = null();
HXDLIN(  59)		::String tex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Options_Buttons",e0,9c,98,cc)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  59)		 ::flixel::graphics::frames::FlxAtlasFrames tex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Options_Buttons",e0,9c,98,cc)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library));
HXLINE(  61)		{
HXLINE(  61)			int _g = 0;
HXDLIN(  61)			int _g1 = this->optionShit->length;
HXDLIN(  61)			while((_g < _g1)){
HXLINE(  61)				_g = (_g + 1);
HXDLIN(  61)				int i = (_g - 1);
HXLINE(  63)				 ::flixel::FlxSprite menuItem =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,800,(30 + (i * 160)),null());
HXLINE(  64)				menuItem->set_frames(tex1);
HXLINE(  65)				menuItem->animation->addByPrefix(HX_("idle",14,a7,b3,45),(this->optionShit->__get(i) + HX_(" idle",34,37,86,b2)),24,true,null(),null());
HXLINE(  66)				menuItem->animation->addByPrefix(HX_("select",fc,1a,33,6a),(this->optionShit->__get(i) + HX_(" select",1c,f3,e1,9c)),24,true,null(),null());
HXLINE(  67)				menuItem->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE(  68)				menuItem->ID = i;
HXLINE(  69)				this->menuItems->add(menuItem).StaticCast<  ::flixel::FlxSprite >();
HXLINE(  70)				menuItem->scrollFactor->set(null(),null());
HXLINE(  71)				menuItem->set_antialiasing(true);
HXLINE(  72)				menuItem->scrollFactor->set_x(( (Float)(0) ));
HXLINE(  73)				menuItem->scrollFactor->set_y(( (Float)(1) ));
HXLINE(  75)				menuItem->set_x(( (Float)(2000) ));
HXLINE(  76)				::flixel::tweens::FlxTween_obj::tween(menuItem, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("x",78,00,00,00),800)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
            			}
            		}
HXLINE(  79)		this->camFollow =  ::flixel::FlxObject_obj::__alloc( HX_CTX ,0,0,1,1);
HXLINE(  80)		this->add(this->camFollow);
HXLINE(  82)		this->changeItem(null());
HXLINE(  84)		this->createResults();
HXLINE(  86)		::flixel::FlxG_obj::camera->follow(this->camFollow,null(),this->camLerp);
HXLINE(  89)		::DiscordClient_obj::changePresence(HX_("Settings page: Clear",fb,d7,ef,34),null(),null(),null(),null());
            	}

Dynamic PAGE6settings_obj::__CreateEmpty() { return new PAGE6settings_obj; }

void *PAGE6settings_obj::_hx_vtable = 0;

Dynamic PAGE6settings_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PAGE6settings_obj > _hx_result = new PAGE6settings_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PAGE6settings_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x62817b24) {
		if (inClassId<=(int)0x6265047e) {
			if (inClassId<=(int)0x5661ffbf) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x5661ffbf;
			} else {
				return inClassId==(int)0x6265047e;
			}
		} else {
			return inClassId==(int)0x62817b24;
		}
	} else {
		if (inClassId<=(int)0x7ccf8994) {
			return inClassId==(int)0x7c795c9f || inClassId==(int)0x7ccf8994;
		} else {
			return inClassId==(int)0x7fce3ab0;
		}
	}
}

void PAGE6settings_obj::createResults(){
            	HX_STACKFRAME(&_hx_pos_a896d25500a6c910_94_createResults)
HXLINE(  95)		this->add(this->ResultText);
HXLINE(  96)		this->ResultText->scrollFactor->set_x(( (Float)(0) ));
HXLINE(  97)		this->ResultText->scrollFactor->set_y(( (Float)(0) ));
HXLINE(  98)		this->ResultText->setFormat(HX_("VCR OSD Mono",be,44,e4,b8),48,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE(  99)		this->ResultText->set_x(( (Float)(-400) ));
HXLINE( 100)		this->ResultText->set_y(( (Float)(350) ));
HXLINE( 101)		{
HXLINE( 101)			 ::flixel::text::FlxText _this = this->ResultText;
HXDLIN( 101)			_this->set_borderStyle(::flixel::text::FlxTextBorderStyle_obj::OUTLINE_dyn());
HXDLIN( 101)			_this->set_borderColor(-16777216);
HXDLIN( 101)			_this->set_borderSize(( (Float)(5) ));
HXDLIN( 101)			_this->set_borderQuality(( (Float)(1) ));
            		}
HXLINE( 102)		this->ResultText->set_alpha(( (Float)(0) ));
HXLINE( 103)		::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
HXLINE( 105)		this->add(this->ExplainText);
HXLINE( 106)		this->ExplainText->scrollFactor->set_x(( (Float)(0) ));
HXLINE( 107)		this->ExplainText->scrollFactor->set_y(( (Float)(0) ));
HXLINE( 108)		this->ExplainText->setFormat(HX_("VCR OSD Mono",be,44,e4,b8),24,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 109)		this->ExplainText->set_alignment(HX_("left",07,08,b0,47));
HXLINE( 110)		this->ExplainText->set_x(( (Float)(20) ));
HXLINE( 111)		this->ExplainText->set_y(( (Float)(624) ));
HXLINE( 112)		{
HXLINE( 112)			 ::flixel::text::FlxText _this1 = this->ExplainText;
HXDLIN( 112)			_this1->set_borderStyle(::flixel::text::FlxTextBorderStyle_obj::OUTLINE_dyn());
HXDLIN( 112)			_this1->set_borderColor(-16777216);
HXDLIN( 112)			_this1->set_borderSize(( (Float)(5) ));
HXDLIN( 112)			_this1->set_borderQuality(( (Float)(1) ));
            		}
HXLINE( 113)		this->ExplainText->set_alpha(( (Float)(0) ));
HXLINE( 114)		::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC0(PAGE6settings_obj,createResults,(void))

void PAGE6settings_obj::update(Float elapsed){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::PAGE6settings,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::FlxSprite spr){
            			HX_GC_STACKFRAME(&_hx_pos_a896d25500a6c910_190_update)
HXLINE( 191)			Float a = spr->scale->x;
HXDLIN( 191)			Float a1 = spr->scale->y;
HXDLIN( 191)			spr->scale->set((a + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)0.8) - a))),(a1 + ((((Float)0.4) / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)0.8) - a1))));
HXLINE( 193)			if ((spr->ID == _gthis->curSelected)) {
HXLINE( 195)				 ::flixel::FlxObject _gthis1 = _gthis->camFollow;
HXDLIN( 195)				Float a = _gthis->camFollow->y;
HXDLIN( 195)				Float b = spr->getGraphicMidpoint(null())->y;
HXDLIN( 195)				_gthis1->set_y((a + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (b - a))));
HXLINE( 196)				 ::flixel::FlxObject _gthis2 = _gthis->camFollow;
HXDLIN( 196)				_gthis2->set_x(spr->getGraphicMidpoint(null())->x);
HXLINE( 197)				Float a1 = spr->scale->x;
HXDLIN( 197)				Float a2 = spr->scale->y;
HXDLIN( 197)				spr->scale->set((a1 + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)1.1) - a1))),(a2 + ((((Float)0.4) / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)1.1) - a2))));
            			}
HXLINE( 200)			spr->updateHitbox();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_a896d25500a6c910_118_update)
HXLINE( 117)		 ::PAGE6settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 119)		this->super::update(elapsed);
HXLINE( 121)		if (!(this->selectedSomethin)) {
HXLINE( 123)			if (::PlayerSettings_obj::player1->controls->_upP->check()) {
HXLINE( 125)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 125)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 125)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 126)				this->changeItem(-1);
            			}
HXLINE( 129)			if (::PlayerSettings_obj::player1->controls->_downP->check()) {
HXLINE( 131)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 131)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 131)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 132)				this->changeItem(1);
            			}
HXLINE( 135)			if (::PlayerSettings_obj::player1->controls->_leftP->check()) {
HXLINE( 137)				this->changePress(-1);
            			}
HXLINE( 140)			if (::PlayerSettings_obj::player1->controls->_rightP->check()) {
HXLINE( 142)				this->changePress(1);
            			}
HXLINE( 145)			if (::PlayerSettings_obj::player1->controls->_accept->check()) {
HXLINE( 147)				this->clearStuff();
            			}
HXLINE( 150)			if (::PlayerSettings_obj::player1->controls->_back->check()) {
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            				void _hx_run( ::flixel::FlxSprite spr){
            					HX_STACKFRAME(&_hx_pos_a896d25500a6c910_160_update)
HXLINE( 161)					spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 162)					::flixel::tweens::FlxTween_obj::tween(spr, ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("x",78,00,00,00),-1000)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
            				}
            				HX_END_LOCAL_FUNC1((void))

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            				void _hx_run( ::flixel::util::FlxTimer tmr){
            					HX_GC_STACKFRAME(&_hx_pos_a896d25500a6c910_171_update)
HXLINE( 171)					 ::flixel::FlxState nextState =  ::MainMenuState_obj::__alloc( HX_CTX ,null(),null());
HXDLIN( 171)					if (::flixel::FlxG_obj::game->_state->switchTo(nextState)) {
HXLINE( 171)						::flixel::FlxG_obj::game->_requestedState = nextState;
            					}
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 152)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 152)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("cancelMenu",39,a4,43,b7),null());
HXDLIN( 152)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 153)				this->selectedSomethin = true;
HXLINE( 156)				::DiscordClient_obj::changePresence(HX_("Back to the main menu I go!",cd,8a,d1,a7),null(),null(),null(),null());
HXLINE( 159)				this->menuItems->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 165)				::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("zoom",13,a3,f8,50),7)),((Float)0.5), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("startDelay",c1,af,3d,f3),((Float)0.2))
            					->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 166)				::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 167)				::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 169)				 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.3), ::Dynamic(new _hx_Closure_1()),null());
            			}
            		}
HXLINE( 176)		::String _hx_switch_0 = this->optionShit->__get(this->curSelected);
            		if (  (_hx_switch_0==HX_("config",c2,56,d2,c7)) ){
HXLINE( 182)			this->ResultText->set_text(HX_("",00,00,00,00));
HXLINE( 183)			this->ExplainText->set_text(HX_("CLEAR CONFIG:\nWill reset your configuration in case anything goes wrong, which it shouldn't.",f5,98,8d,ca));
HXLINE( 181)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("page",4f,da,51,4a)) ){
HXLINE( 179)			this->ResultText->set_text(HX_("CLEAR",6d,a9,49,c6));
HXLINE( 180)			this->ExplainText->set_text(HX_("Previous Page: DEVELOPER \nNext Page: GENERAL",5c,6d,79,35));
HXLINE( 178)			goto _hx_goto_4;
            		}
            		if (  (_hx_switch_0==HX_("save",3d,8b,4d,4c)) ){
HXLINE( 185)			this->ResultText->set_text(HX_("",00,00,00,00));
HXLINE( 186)			this->ExplainText->set_text(HX_("CLEAR SAVE:\nWill reset your save file back to zero. All scores, all ranks. Gone.",be,bd,b2,b2));
HXLINE( 184)			goto _hx_goto_4;
            		}
            		_hx_goto_4:;
HXLINE( 189)		this->menuItems->forEach( ::Dynamic(new _hx_Closure_2(_gthis)),null());
            	}


void PAGE6settings_obj::changeItem(::hx::Null< int >  __o_huh){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::PAGE6settings,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::FlxSprite spr){
            			HX_STACKFRAME(&_hx_pos_a896d25500a6c910_214_changeItem)
HXLINE( 215)			spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 217)			if ((spr->ID == _gthis->curSelected)) {
HXLINE( 219)				spr->animation->play(HX_("select",fc,1a,33,6a),null(),null(),null());
            			}
HXLINE( 222)			spr->updateHitbox();
            		}
            		HX_END_LOCAL_FUNC1((void))

            		int huh = __o_huh.Default(0);
            	HX_STACKFRAME(&_hx_pos_a896d25500a6c910_205_changeItem)
HXLINE( 204)		 ::PAGE6settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 206)		 ::PAGE6settings _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 206)		_hx_tmp->curSelected = (_hx_tmp->curSelected + huh);
HXLINE( 208)		if ((this->curSelected >= this->menuItems->length)) {
HXLINE( 209)			this->curSelected = 0;
            		}
HXLINE( 210)		if ((this->curSelected < 0)) {
HXLINE( 211)			this->curSelected = (this->menuItems->length - 1);
            		}
HXLINE( 213)		this->menuItems->forEach( ::Dynamic(new _hx_Closure_0(_gthis)),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(PAGE6settings_obj,changeItem,(void))

void PAGE6settings_obj::changePress(::hx::Null< int >  __o_Change){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            		void _hx_run( ::flixel::util::FlxTimer tmr){
            			HX_GC_STACKFRAME(&_hx_pos_a896d25500a6c910_255_changePress)
HXLINE( 255)			::MainVariables_obj::Save();
            		}
            		HX_END_LOCAL_FUNC1((void))

            		int Change = __o_Change.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_a896d25500a6c910_227_changePress)
HXLINE( 226)		 ::PAGE6settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 228)		if ((this->optionShit->__get(this->curSelected) == HX_("page",4f,da,51,4a))) {
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			void _hx_run( ::flixel::FlxSprite spr){
            				HX_STACKFRAME(&_hx_pos_a896d25500a6c910_236_changePress)
HXLINE( 237)				spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 238)				::flixel::tweens::FlxTween_obj::tween(spr, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("x",78,00,00,00),-1000)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1, ::PAGE6settings,_gthis,int,Change) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_a896d25500a6c910_246_changePress)
HXLINE( 246)				if ((Change == 1)) {
HXLINE( 247)					 ::PAGE6settings _gthis1 = _gthis;
HXDLIN( 247)					_gthis1->openSubState( ::PAGE1settings_obj::__alloc( HX_CTX ));
            				}
            				else {
HXLINE( 249)					 ::PAGE6settings _gthis1 = _gthis;
HXDLIN( 249)					_gthis1->openSubState( ::PAGE5settings_obj::__alloc( HX_CTX ));
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 231)			 ::Dynamic _hx_tmp = ::hx::ClassOf< ::SettingsState >();
HXDLIN( 231)			::SettingsState_obj::page = (::SettingsState_obj::page + Change);
HXLINE( 232)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 232)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 232)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 233)			this->selectedSomethin = true;
HXLINE( 235)			this->menuItems->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 241)			::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 242)			::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 244)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_1(_gthis,Change)),null());
            		}
HXLINE( 253)		 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_2()),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(PAGE6settings_obj,changePress,(void))

void PAGE6settings_obj::clearStuff(){
            	HX_STACKFRAME(&_hx_pos_a896d25500a6c910_261_clearStuff)
HXDLIN( 261)		::String _hx_switch_0 = this->optionShit->__get(this->curSelected);
            		if (  (_hx_switch_0==HX_("config",c2,56,d2,c7)) ){
HXLINE( 269)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 269)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("confirmMenu",bf,8e,fe,3c),null());
HXDLIN( 269)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 270)			::sys::FileSystem_obj::deleteFile(HX_("config.json",54,db,08,a4));
HXLINE( 271)			::flixel::FlxG_obj::sound->music->set_volume(( (Float)(1) ));
HXLINE( 273)			if (::hx::IsNotEq( ::MainVariables_obj::_variables->__Field(HX_("music",a5,d0,5a,10),::hx::paccDynamic),HX_("Classic",f2,79,e2,36) )) {
HXLINE( 274)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 274)				::String library = null();
HXDLIN( 274)				::String _hx_tmp1 = ::Paths_obj::getPath((((HX_("music/",ea,bf,1b,3f) + HX_("freakyMenu",15,c9,93,86)) + HX_(".",2e,00,00,00)) + HX_("ogg",4f,94,54,00)),HX_("MUSIC",85,08,49,8e),library);
HXDLIN( 274)				_hx_tmp->playMusic(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("mvolume",07,ba,f6,13),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null());
            			}
HXLINE( 276)			::MainVariables_obj::Load();
HXLINE( 277)			::MainVariables_obj::_variables->__SetField(HX_("firstTime",5d,48,cb,03),false,::hx::paccDynamic);
HXLINE( 278)			::MainVariables_obj::Save();
HXLINE( 279)			::hx::TCast<  ::Main >::cast(::openfl::Lib_obj::get_current()->getChildAt(0))->changeColor(-1);
HXLINE( 268)			goto _hx_goto_15;
            		}
            		if (  (_hx_switch_0==HX_("save",3d,8b,4d,4c)) ){
HXLINE( 264)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 264)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("confirmMenu",bf,8e,fe,3c),null());
HXDLIN( 264)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 265)			::flixel::FlxG_obj::save->erase();
HXLINE( 266)			::flixel::FlxG_obj::save->flush(null(),null());
HXLINE( 267)			::flixel::FlxG_obj::save->bind(HX_("save",3d,8b,4d,4c),HX_("Funkin Mic'd Up",46,71,c5,91));
HXLINE( 263)			goto _hx_goto_15;
            		}
            		_hx_goto_15:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PAGE6settings_obj,clearStuff,(void))

void PAGE6settings_obj::openSubState( ::flixel::FlxSubState SubState){
            	HX_STACKFRAME(&_hx_pos_a896d25500a6c910_285_openSubState)
HXDLIN( 285)		this->super::openSubState(SubState);
            	}



::hx::ObjectPtr< PAGE6settings_obj > PAGE6settings_obj::__new() {
	::hx::ObjectPtr< PAGE6settings_obj > __this = new PAGE6settings_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PAGE6settings_obj > PAGE6settings_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PAGE6settings_obj *__this = (PAGE6settings_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PAGE6settings_obj), true, "PAGE6settings"));
	*(void **)__this = PAGE6settings_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PAGE6settings_obj::PAGE6settings_obj()
{
}

void PAGE6settings_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PAGE6settings);
	HX_MARK_MEMBER_NAME(menuItems,"menuItems");
	HX_MARK_MEMBER_NAME(optionShit,"optionShit");
	HX_MARK_MEMBER_NAME(grpSongs,"grpSongs");
	HX_MARK_MEMBER_NAME(selectedSomethin,"selectedSomethin");
	HX_MARK_MEMBER_NAME(curSelected,"curSelected");
	HX_MARK_MEMBER_NAME(camFollow,"camFollow");
	HX_MARK_MEMBER_NAME(ResultText,"ResultText");
	HX_MARK_MEMBER_NAME(ExplainText,"ExplainText");
	HX_MARK_MEMBER_NAME(camLerp,"camLerp");
	 ::flixel::FlxSubState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void PAGE6settings_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(menuItems,"menuItems");
	HX_VISIT_MEMBER_NAME(optionShit,"optionShit");
	HX_VISIT_MEMBER_NAME(grpSongs,"grpSongs");
	HX_VISIT_MEMBER_NAME(selectedSomethin,"selectedSomethin");
	HX_VISIT_MEMBER_NAME(curSelected,"curSelected");
	HX_VISIT_MEMBER_NAME(camFollow,"camFollow");
	HX_VISIT_MEMBER_NAME(ResultText,"ResultText");
	HX_VISIT_MEMBER_NAME(ExplainText,"ExplainText");
	HX_VISIT_MEMBER_NAME(camLerp,"camLerp");
	 ::flixel::FlxSubState_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val PAGE6settings_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"camLerp") ) { return ::hx::Val( camLerp ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"grpSongs") ) { return ::hx::Val( grpSongs ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"menuItems") ) { return ::hx::Val( menuItems ); }
		if (HX_FIELD_EQ(inName,"camFollow") ) { return ::hx::Val( camFollow ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"optionShit") ) { return ::hx::Val( optionShit ); }
		if (HX_FIELD_EQ(inName,"ResultText") ) { return ::hx::Val( ResultText ); }
		if (HX_FIELD_EQ(inName,"changeItem") ) { return ::hx::Val( changeItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStuff") ) { return ::hx::Val( clearStuff_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"curSelected") ) { return ::hx::Val( curSelected ); }
		if (HX_FIELD_EQ(inName,"ExplainText") ) { return ::hx::Val( ExplainText ); }
		if (HX_FIELD_EQ(inName,"changePress") ) { return ::hx::Val( changePress_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"openSubState") ) { return ::hx::Val( openSubState_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"createResults") ) { return ::hx::Val( createResults_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"selectedSomethin") ) { return ::hx::Val( selectedSomethin ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PAGE6settings_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"camLerp") ) { camLerp=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"grpSongs") ) { grpSongs=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"menuItems") ) { menuItems=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"camFollow") ) { camFollow=inValue.Cast<  ::flixel::FlxObject >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"optionShit") ) { optionShit=inValue.Cast< ::Array< ::String > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ResultText") ) { ResultText=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"curSelected") ) { curSelected=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ExplainText") ) { ExplainText=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"selectedSomethin") ) { selectedSomethin=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PAGE6settings_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("menuItems",e1,15,e5,5c));
	outFields->push(HX_("optionShit",d5,2d,ee,91));
	outFields->push(HX_("grpSongs",d9,dc,c7,63));
	outFields->push(HX_("selectedSomethin",c8,ec,fb,99));
	outFields->push(HX_("curSelected",fb,eb,ab,32));
	outFields->push(HX_("camFollow",e0,6e,47,22));
	outFields->push(HX_("ResultText",4a,98,ea,b4));
	outFields->push(HX_("ExplainText",e4,d8,c2,94));
	outFields->push(HX_("camLerp",26,66,a1,d2));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PAGE6settings_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(PAGE6settings_obj,menuItems),HX_("menuItems",e1,15,e5,5c)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(PAGE6settings_obj,optionShit),HX_("optionShit",d5,2d,ee,91)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(PAGE6settings_obj,grpSongs),HX_("grpSongs",d9,dc,c7,63)},
	{::hx::fsBool,(int)offsetof(PAGE6settings_obj,selectedSomethin),HX_("selectedSomethin",c8,ec,fb,99)},
	{::hx::fsInt,(int)offsetof(PAGE6settings_obj,curSelected),HX_("curSelected",fb,eb,ab,32)},
	{::hx::fsObject /*  ::flixel::FlxObject */ ,(int)offsetof(PAGE6settings_obj,camFollow),HX_("camFollow",e0,6e,47,22)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(PAGE6settings_obj,ResultText),HX_("ResultText",4a,98,ea,b4)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(PAGE6settings_obj,ExplainText),HX_("ExplainText",e4,d8,c2,94)},
	{::hx::fsFloat,(int)offsetof(PAGE6settings_obj,camLerp),HX_("camLerp",26,66,a1,d2)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PAGE6settings_obj_sStaticStorageInfo = 0;
#endif

static ::String PAGE6settings_obj_sMemberFields[] = {
	HX_("menuItems",e1,15,e5,5c),
	HX_("optionShit",d5,2d,ee,91),
	HX_("grpSongs",d9,dc,c7,63),
	HX_("selectedSomethin",c8,ec,fb,99),
	HX_("curSelected",fb,eb,ab,32),
	HX_("camFollow",e0,6e,47,22),
	HX_("ResultText",4a,98,ea,b4),
	HX_("ExplainText",e4,d8,c2,94),
	HX_("camLerp",26,66,a1,d2),
	HX_("createResults",5a,31,9a,53),
	HX_("update",09,86,05,87),
	HX_("changeItem",a3,fa,08,20),
	HX_("changePress",f3,fb,4d,ee),
	HX_("clearStuff",27,d6,24,59),
	HX_("openSubState",5b,66,48,37),
	::String(null()) };

::hx::Class PAGE6settings_obj::__mClass;

void PAGE6settings_obj::__register()
{
	PAGE6settings_obj _hx_dummy;
	PAGE6settings_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("PAGE6settings",ea,be,ad,19);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PAGE6settings_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PAGE6settings_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PAGE6settings_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PAGE6settings_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}


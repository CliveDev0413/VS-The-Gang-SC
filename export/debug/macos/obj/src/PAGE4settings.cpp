// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Controls
#include <Controls.h>
#endif
#ifndef INCLUDED_DiscordClient
#include <DiscordClient.h>
#endif
#ifndef INCLUDED_MainMenuState
#include <MainMenuState.h>
#endif
#ifndef INCLUDED_MainVariables
#include <MainVariables.h>
#endif
#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
#ifndef INCLUDED_MusicBeatSubstate
#include <MusicBeatSubstate.h>
#endif
#ifndef INCLUDED_PAGE3settings
#include <PAGE3settings.h>
#endif
#ifndef INCLUDED_PAGE4settings
#include <PAGE4settings.h>
#endif
#ifndef INCLUDED_PAGE5settings
#include <PAGE5settings.h>
#endif
#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_PlayerSettings
#include <PlayerSettings.h>
#endif
#ifndef INCLUDED_SettingsState
#include <SettingsState.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxCamera
#include <flixel/FlxCamera.h>
#endif
#ifndef INCLUDED_flixel_FlxCameraFollowStyle
#include <flixel/FlxCameraFollowStyle.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxGame
#include <flixel/FlxGame.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_TransitionData
#include <flixel/addons/transition/TransitionData.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxAction
#include <flixel/input/actions/FlxAction.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionDigital
#include <flixel/input/actions/FlxActionDigital.h>
#endif
#ifndef INCLUDED_flixel_input_actions_FlxActionSet
#include <flixel/input/actions/FlxActionSet.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSound
#include <flixel/system/FlxSound.h>
#endif
#ifndef INCLUDED_flixel_system_FlxSoundGroup
#include <flixel/system/FlxSoundGroup.h>
#endif
#ifndef INCLUDED_flixel_system_frontEnds_SoundFrontEnd
#include <flixel/system/frontEnds/SoundFrontEnd.h>
#endif
#ifndef INCLUDED_flixel_text_FlxText
#include <flixel/text/FlxText.h>
#endif
#ifndef INCLUDED_flixel_text_FlxTextBorderStyle
#include <flixel/text/FlxTextBorderStyle.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxEase
#include <flixel/tweens/FlxEase.h>
#endif
#ifndef INCLUDED_flixel_tweens_FlxTween
#include <flixel/tweens/FlxTween.h>
#endif
#ifndef INCLUDED_flixel_tweens_misc_VarTween
#include <flixel/tweens/misc/VarTween.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimer
#include <flixel/util/FlxTimer.h>
#endif
#ifndef INCLUDED_flixel_util_FlxTimerManager
#include <flixel/util/FlxTimerManager.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f754181c32c7f7b3_29_new,"PAGE4settings","new",0x656321da,"PAGE4settings.new","PAGE4settings.hx",29,0x1e4d56d6)
static const ::String _hx_array_data_73caece8_2[] = {
	HX_("page",4f,da,51,4a),HX_("offset",93,97,3f,60),HX_("spam",c9,da,58,4c),HX_("lateD",5e,b6,bc,6f),HX_("accuType",ee,e0,02,ec),HX_("combo+",1d,1c,26,c7),HX_("cutscene",8a,1c,09,fa),
};
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_97_updateResults,"PAGE4settings","updateResults",0xee836be7,"PAGE4settings.updateResults","PAGE4settings.hx",97,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_110_createResults,"PAGE4settings","createResults",0x0b57df54,"PAGE4settings.createResults","PAGE4settings.hx",110,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_223_update,"PAGE4settings","update",0x5042dccf,"PAGE4settings.update","PAGE4settings.hx",223,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_134_update,"PAGE4settings","update",0x5042dccf,"PAGE4settings.update","PAGE4settings.hx",134,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_181_update,"PAGE4settings","update",0x5042dccf,"PAGE4settings.update","PAGE4settings.hx",181,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_192_update,"PAGE4settings","update",0x5042dccf,"PAGE4settings.update","PAGE4settings.hx",192,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_247_changeItem,"PAGE4settings","changeItem",0x43002c69,"PAGE4settings.changeItem","PAGE4settings.hx",247,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_238_changeItem,"PAGE4settings","changeItem",0x43002c69,"PAGE4settings.changeItem","PAGE4settings.hx",238,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_322_changePress,"PAGE4settings","changePress",0x63a2576d,"PAGE4settings.changePress","PAGE4settings.hx",322,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_260_changePress,"PAGE4settings","changePress",0x63a2576d,"PAGE4settings.changePress","PAGE4settings.hx",260,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_269_changePress,"PAGE4settings","changePress",0x63a2576d,"PAGE4settings.changePress","PAGE4settings.hx",269,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_279_changePress,"PAGE4settings","changePress",0x63a2576d,"PAGE4settings.changePress","PAGE4settings.hx",279,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_342_changeHold,"PAGE4settings","changeHold",0x42533095,"PAGE4settings.changeHold","PAGE4settings.hx",342,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_327_changeHold,"PAGE4settings","changeHold",0x42533095,"PAGE4settings.changeHold","PAGE4settings.hx",327,0x1e4d56d6)
HX_LOCAL_STACK_FRAME(_hx_pos_f754181c32c7f7b3_348_openSubState,"PAGE4settings","openSubState",0x6bc415a1,"PAGE4settings.openSubState","PAGE4settings.hx",348,0x1e4d56d6)

void PAGE4settings_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_29_new)
HXLINE(  45)		this->camLerp = ((Float)0.32);
HXLINE(  43)		this->pause = 0;
HXLINE(  41)		this->ExplainText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,20,69,(( (Float)(::flixel::FlxG_obj::width) ) / ( (Float)(2) )),HX_("",00,00,00,00),48,null());
HXLINE(  40)		this->ResultText =  ::flixel::text::FlxText_obj::__alloc( HX_CTX ,20,69,::flixel::FlxG_obj::width,HX_("",00,00,00,00),48,null());
HXLINE(  37)		this->curSelected = 0;
HXLINE(  36)		this->selectedSomethin = false;
HXLINE(  33)		this->optionShit = ::Array_obj< ::String >::fromData( _hx_array_data_73caece8_2,7);
HXLINE(  51)		super::__construct();
HXLINE(  53)		this->persistentDraw = (this->persistentUpdate = true);
HXLINE(  54)		this->destroySubStates = false;
HXLINE(  56)		this->menuItems =  ::flixel::group::FlxTypedGroup_obj::__alloc( HX_CTX ,null());
HXLINE(  57)		this->add(this->menuItems);
HXLINE(  59)		::String library = null();
HXDLIN(  59)		::String tex = ::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Options_Buttons",e0,9c,98,cc)) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library);
HXDLIN(  59)		 ::flixel::graphics::frames::FlxAtlasFrames tex1 = ::flixel::graphics::frames::FlxAtlasFrames_obj::fromSparrow(tex,::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + HX_("Options_Buttons",e0,9c,98,cc)) + HX_(".xml",69,3e,c3,1e)),HX_("TEXT",ad,94,ba,37),library));
HXLINE(  61)		{
HXLINE(  61)			int _g = 0;
HXDLIN(  61)			int _g1 = this->optionShit->length;
HXDLIN(  61)			while((_g < _g1)){
HXLINE(  61)				_g = (_g + 1);
HXDLIN(  61)				int i = (_g - 1);
HXLINE(  63)				 ::flixel::FlxSprite menuItem =  ::flixel::FlxSprite_obj::__alloc( HX_CTX ,800,(30 + (i * 160)),null());
HXLINE(  64)				menuItem->set_frames(tex1);
HXLINE(  65)				menuItem->animation->addByPrefix(HX_("idle",14,a7,b3,45),(this->optionShit->__get(i) + HX_(" idle",34,37,86,b2)),24,true,null(),null());
HXLINE(  66)				menuItem->animation->addByPrefix(HX_("select",fc,1a,33,6a),(this->optionShit->__get(i) + HX_(" select",1c,f3,e1,9c)),24,true,null(),null());
HXLINE(  67)				menuItem->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE(  68)				menuItem->ID = i;
HXLINE(  69)				this->menuItems->add(menuItem).StaticCast<  ::flixel::FlxSprite >();
HXLINE(  70)				menuItem->scrollFactor->set(null(),null());
HXLINE(  71)				menuItem->set_antialiasing(true);
HXLINE(  72)				menuItem->scrollFactor->set_x(( (Float)(0) ));
HXLINE(  73)				menuItem->scrollFactor->set_y(( (Float)(1) ));
HXLINE(  75)				menuItem->set_x(( (Float)(2000) ));
HXLINE(  76)				::flixel::tweens::FlxTween_obj::tween(menuItem, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("x",78,00,00,00),800)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
            			}
            		}
HXLINE(  79)		this->camFollow =  ::flixel::FlxObject_obj::__alloc( HX_CTX ,0,0,1,1);
HXLINE(  80)		this->add(this->camFollow);
HXLINE(  82)		this->changeItem(null());
HXLINE(  84)		this->createResults();
HXLINE(  86)		this->updateResults();
HXLINE(  88)		::flixel::FlxG_obj::camera->follow(this->camFollow,null(),this->camLerp);
HXLINE(  91)		::DiscordClient_obj::changePresence(HX_("Settings page: Gameplay",38,d5,0b,a8),null(),null(),null(),null());
            	}

Dynamic PAGE4settings_obj::__CreateEmpty() { return new PAGE4settings_obj; }

void *PAGE4settings_obj::_hx_vtable = 0;

Dynamic PAGE4settings_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PAGE4settings_obj > _hx_result = new PAGE4settings_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PAGE4settings_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x62817b24) {
		if (inClassId<=(int)0x5661ffbf) {
			if (inClassId<=(int)0x50120228) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x50120228;
			} else {
				return inClassId==(int)0x5661ffbf;
			}
		} else {
			return inClassId==(int)0x62817b24;
		}
	} else {
		if (inClassId<=(int)0x7ccf8994) {
			return inClassId==(int)0x7c795c9f || inClassId==(int)0x7ccf8994;
		} else {
			return inClassId==(int)0x7fce3ab0;
		}
	}
}

void PAGE4settings_obj::updateResults(){
            	HX_STACKFRAME(&_hx_pos_f754181c32c7f7b3_97_updateResults)
HXDLIN(  97)		::String _hx_switch_0 = ( (::String)(::MainVariables_obj::_variables->__Field(HX_("accuracyType",93,35,79,37),::hx::paccDynamic)) );
            		if (  (_hx_switch_0==HX_("complex",30,66,71,83)) ){
HXLINE( 104)			this->acc = ( (Float)(2) );
HXDLIN( 104)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("rating-based",c3,0b,e1,bc)) ){
HXLINE( 102)			this->acc = ( (Float)(1) );
HXDLIN( 102)			goto _hx_goto_3;
            		}
            		if (  (_hx_switch_0==HX_("simple",32,04,7f,b8)) ){
HXLINE( 100)			this->acc = ( (Float)(0) );
HXDLIN( 100)			goto _hx_goto_3;
            		}
            		_hx_goto_3:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(PAGE4settings_obj,updateResults,(void))

void PAGE4settings_obj::createResults(){
            	HX_STACKFRAME(&_hx_pos_f754181c32c7f7b3_110_createResults)
HXLINE( 111)		this->add(this->ResultText);
HXLINE( 112)		this->ResultText->scrollFactor->set_x(( (Float)(0) ));
HXLINE( 113)		this->ResultText->scrollFactor->set_y(( (Float)(0) ));
HXLINE( 114)		this->ResultText->setFormat(HX_("VCR OSD Mono",be,44,e4,b8),48,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 115)		this->ResultText->set_x(( (Float)(-400) ));
HXLINE( 116)		this->ResultText->set_y(( (Float)(350) ));
HXLINE( 117)		{
HXLINE( 117)			 ::flixel::text::FlxText _this = this->ResultText;
HXDLIN( 117)			_this->set_borderStyle(::flixel::text::FlxTextBorderStyle_obj::OUTLINE_dyn());
HXDLIN( 117)			_this->set_borderColor(-16777216);
HXDLIN( 117)			_this->set_borderSize(( (Float)(5) ));
HXDLIN( 117)			_this->set_borderQuality(( (Float)(1) ));
            		}
HXLINE( 118)		this->ResultText->set_alpha(( (Float)(0) ));
HXLINE( 119)		::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
HXLINE( 121)		this->add(this->ExplainText);
HXLINE( 122)		this->ExplainText->scrollFactor->set_x(( (Float)(0) ));
HXLINE( 123)		this->ExplainText->scrollFactor->set_y(( (Float)(0) ));
HXLINE( 124)		this->ExplainText->setFormat(HX_("VCR OSD Mono",be,44,e4,b8),24,-1,HX_("center",d5,25,db,05),null(),null(),null());
HXLINE( 125)		this->ExplainText->set_alignment(HX_("left",07,08,b0,47));
HXLINE( 126)		this->ExplainText->set_x(( (Float)(20) ));
HXLINE( 127)		this->ExplainText->set_y(( (Float)(624) ));
HXLINE( 128)		{
HXLINE( 128)			 ::flixel::text::FlxText _this1 = this->ExplainText;
HXDLIN( 128)			_this1->set_borderStyle(::flixel::text::FlxTextBorderStyle_obj::OUTLINE_dyn());
HXDLIN( 128)			_this1->set_borderColor(-16777216);
HXDLIN( 128)			_this1->set_borderSize(( (Float)(5) ));
HXDLIN( 128)			_this1->set_borderQuality(( (Float)(1) ));
            		}
HXLINE( 129)		this->ExplainText->set_alpha(( (Float)(0) ));
HXLINE( 130)		::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("alpha",5e,a7,96,21),1)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoInOut_dyn())));
            	}


HX_DEFINE_DYNAMIC_FUNC0(PAGE4settings_obj,createResults,(void))

void PAGE4settings_obj::update(Float elapsed){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::PAGE4settings,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::FlxSprite spr){
            			HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_223_update)
HXLINE( 224)			Float a = spr->scale->x;
HXDLIN( 224)			Float a1 = spr->scale->y;
HXDLIN( 224)			spr->scale->set((a + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)0.8) - a))),(a1 + ((((Float)0.4) / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)0.8) - a1))));
HXLINE( 226)			if ((spr->ID == _gthis->curSelected)) {
HXLINE( 228)				 ::flixel::FlxObject _gthis1 = _gthis->camFollow;
HXDLIN( 228)				Float a = _gthis->camFollow->y;
HXDLIN( 228)				Float b = spr->getGraphicMidpoint(null())->y;
HXDLIN( 228)				_gthis1->set_y((a + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (b - a))));
HXLINE( 229)				 ::flixel::FlxObject _gthis2 = _gthis->camFollow;
HXDLIN( 229)				_gthis2->set_x(spr->getGraphicMidpoint(null())->x);
HXLINE( 230)				Float a1 = spr->scale->x;
HXDLIN( 230)				Float a2 = spr->scale->y;
HXDLIN( 230)				spr->scale->set((a1 + ((_gthis->camLerp / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)1.1) - a1))),(a2 + ((((Float)0.4) / (( (Float)(::MainVariables_obj::_variables->__Field(HX_("fps",e9,c7,4d,00),::hx::paccDynamic)) ) / ( (Float)(60) ))) * (((Float)1.1) - a2))));
            			}
HXLINE( 233)			spr->updateHitbox();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_134_update)
HXLINE( 133)		 ::PAGE4settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 135)		this->super::update(elapsed);
HXLINE( 137)		if (!(this->selectedSomethin)) {
HXLINE( 139)			if (::PlayerSettings_obj::player1->controls->_upP->check()) {
HXLINE( 141)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 141)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 141)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 142)				this->changeItem(-1);
            			}
HXLINE( 145)			if (::PlayerSettings_obj::player1->controls->_downP->check()) {
HXLINE( 147)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 147)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 147)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 148)				this->changeItem(1);
            			}
HXLINE( 151)			if (::PlayerSettings_obj::player1->controls->_leftP->check()) {
HXLINE( 153)				this->changePress(-1);
            			}
HXLINE( 156)			if (::PlayerSettings_obj::player1->controls->_rightP->check()) {
HXLINE( 158)				this->changePress(1);
            			}
HXLINE( 161)			if (::PlayerSettings_obj::player1->controls->_left->check()) {
HXLINE( 163)				this->changeHold(-1);
            			}
HXLINE( 166)			if (::PlayerSettings_obj::player1->controls->_right->check()) {
HXLINE( 168)				this->changeHold(1);
            			}
HXLINE( 171)			if (::PlayerSettings_obj::player1->controls->_back->check()) {
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            				void _hx_run( ::flixel::FlxSprite spr){
            					HX_STACKFRAME(&_hx_pos_f754181c32c7f7b3_181_update)
HXLINE( 182)					spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 183)					::flixel::tweens::FlxTween_obj::tween(spr, ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("x",78,00,00,00),-1000)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            						->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
            				}
            				HX_END_LOCAL_FUNC1((void))

            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            				void _hx_run( ::flixel::util::FlxTimer tmr){
            					HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_192_update)
HXLINE( 192)					 ::flixel::FlxState nextState =  ::MainMenuState_obj::__alloc( HX_CTX ,null(),null());
HXDLIN( 192)					if (::flixel::FlxG_obj::game->_state->switchTo(nextState)) {
HXLINE( 192)						::flixel::FlxG_obj::game->_requestedState = nextState;
            					}
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 173)				 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 173)				::String _hx_tmp1 = ::Paths_obj::sound(HX_("cancelMenu",39,a4,43,b7),null());
HXDLIN( 173)				_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 174)				this->selectedSomethin = true;
HXLINE( 177)				::DiscordClient_obj::changePresence(HX_("Back to the main menu I go!",cd,8a,d1,a7),null(),null(),null(),null());
HXLINE( 180)				this->menuItems->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 186)				::flixel::tweens::FlxTween_obj::tween(::flixel::FlxG_obj::camera, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("zoom",13,a3,f8,50),7)),((Float)0.5), ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("startDelay",c1,af,3d,f3),((Float)0.2))
            					->setFixed(1,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 187)				::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 188)				::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 190)				 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.3), ::Dynamic(new _hx_Closure_1()),null());
            			}
            		}
HXLINE( 197)		::String _hx_switch_0 = this->optionShit->__get(this->curSelected);
            		if (  (_hx_switch_0==HX_("accuType",ee,e0,02,ec)) ){
HXLINE( 209)			this->ResultText->set_text(( (::String)(::MainVariables_obj::_variables->__Field(HX_("accuracyType",93,35,79,37),::hx::paccDynamic)) ));
HXLINE( 210)			this->ExplainText->set_text(HX_("ACCURACY TYPE:\nSet how should accuracy be taken. 'Complex' will take offsets into account. 'Simple' doesn't.",dd,ba,33,dc));
HXLINE( 208)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("combo+",1d,1c,26,c7)) ){
HXLINE( 212)			 ::flixel::text::FlxText _hx_tmp = this->ResultText;
HXDLIN( 212)			_hx_tmp->set_text(::Std_obj::string( ::Dynamic(::MainVariables_obj::_variables->__Field(HX_("comboP",42,1c,26,c7),::hx::paccDynamic))).toUpperCase());
HXLINE( 213)			this->ExplainText->set_text(HX_("COMBO+:\nSet if your score should be affected by your combo.",5d,3a,e8,b0));
HXLINE( 211)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("cutscene",8a,1c,09,fa)) ){
HXLINE( 215)			 ::flixel::text::FlxText _hx_tmp = this->ResultText;
HXDLIN( 215)			_hx_tmp->set_text(::Std_obj::string( ::Dynamic(::MainVariables_obj::_variables->__Field(HX_("cutscene",8a,1c,09,fa),::hx::paccDynamic))).toUpperCase());
HXLINE( 216)			this->ExplainText->set_text(HX_("CUTSCENES:\nToggle Story Mode cutscenes on or off.",71,c1,3f,12));
HXLINE( 214)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("lateD",5e,b6,bc,6f)) ){
HXLINE( 218)			 ::flixel::text::FlxText _hx_tmp = this->ResultText;
HXDLIN( 218)			_hx_tmp->set_text(::Std_obj::string( ::Dynamic(::MainVariables_obj::_variables->__Field(HX_("lateD",5e,b6,bc,6f),::hx::paccDynamic))).toUpperCase());
HXLINE( 219)			this->ExplainText->set_text(HX_("LATE DAMAGE:\nChange if you want to damage your health when hitting too late.",bd,4a,3b,97));
HXLINE( 217)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("offset",93,97,3f,60)) ){
HXLINE( 200)			this->ResultText->set_text(( (::String)((::MainVariables_obj::_variables->__Field(HX_("noteOffset",25,a5,53,fe),::hx::paccDynamic) + HX_(" ms",86,a7,18,00))) ));
HXLINE( 201)			this->ExplainText->set_text(HX_("NOTE OFFSET:\nChange the offset of your notes. The higher the time, the later they go.",93,c5,c1,e7));
HXLINE( 199)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("page",4f,da,51,4a)) ){
HXLINE( 203)			this->ResultText->set_text(HX_("GAMEPLAY",e6,92,2c,25));
HXLINE( 204)			this->ExplainText->set_text(HX_("Previous Page: GFX \nNext Page: MISCELLANEOUS",d1,30,63,c3));
HXLINE( 202)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("spam",c9,da,58,4c)) ){
HXLINE( 206)			 ::flixel::text::FlxText _hx_tmp = this->ResultText;
HXDLIN( 206)			_hx_tmp->set_text(::Std_obj::string( ::Dynamic(::MainVariables_obj::_variables->__Field(HX_("spamPrevention",19,9a,fd,87),::hx::paccDynamic))).toUpperCase());
HXLINE( 207)			this->ExplainText->set_text(HX_("SPAM PREVENTION:\nSet your ability to spam key presses without any worries. False means you can.",a3,64,56,b3));
HXLINE( 205)			goto _hx_goto_6;
            		}
            		_hx_goto_6:;
HXLINE( 222)		this->menuItems->forEach( ::Dynamic(new _hx_Closure_2(_gthis)),null());
            	}


void PAGE4settings_obj::changeItem(::hx::Null< int >  __o_huh){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::PAGE4settings,_gthis) HXARGC(1)
            		void _hx_run( ::flixel::FlxSprite spr){
            			HX_STACKFRAME(&_hx_pos_f754181c32c7f7b3_247_changeItem)
HXLINE( 248)			spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 250)			if ((spr->ID == _gthis->curSelected)) {
HXLINE( 252)				spr->animation->play(HX_("select",fc,1a,33,6a),null(),null(),null());
            			}
HXLINE( 255)			spr->updateHitbox();
            		}
            		HX_END_LOCAL_FUNC1((void))

            		int huh = __o_huh.Default(0);
            	HX_STACKFRAME(&_hx_pos_f754181c32c7f7b3_238_changeItem)
HXLINE( 237)		 ::PAGE4settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 239)		 ::PAGE4settings _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 239)		_hx_tmp->curSelected = (_hx_tmp->curSelected + huh);
HXLINE( 241)		if ((this->curSelected >= this->menuItems->length)) {
HXLINE( 242)			this->curSelected = 0;
            		}
HXLINE( 243)		if ((this->curSelected < 0)) {
HXLINE( 244)			this->curSelected = (this->menuItems->length - 1);
            		}
HXLINE( 246)		this->menuItems->forEach( ::Dynamic(new _hx_Closure_0(_gthis)),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(PAGE4settings_obj,changeItem,(void))

void PAGE4settings_obj::changePress(::hx::Null< int >  __o_Change){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            		void _hx_run( ::flixel::util::FlxTimer tmr){
            			HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_322_changePress)
HXLINE( 322)			::MainVariables_obj::Save();
            		}
            		HX_END_LOCAL_FUNC1((void))

            		int Change = __o_Change.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_260_changePress)
HXLINE( 259)		 ::PAGE4settings _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 261)		::String _hx_switch_0 = this->optionShit->__get(this->curSelected);
            		if (  (_hx_switch_0==HX_("accuType",ee,e0,02,ec)) ){
HXLINE( 301)			 ::PAGE4settings _hx_tmp = ::hx::ObjectPtr<OBJ_>(this);
HXDLIN( 301)			_hx_tmp->acc = (_hx_tmp->acc + Change);
HXLINE( 302)			if ((this->acc > 2)) {
HXLINE( 303)				this->acc = ( (Float)(0) );
            			}
HXLINE( 304)			if ((this->acc < 0)) {
HXLINE( 305)				this->acc = ( (Float)(2) );
            			}
HXLINE( 307)			Float _hx_switch_1 = this->acc;
            			if (  (_hx_switch_1==( (Float)(0) )) ){
HXLINE( 310)				::MainVariables_obj::_variables->__SetField(HX_("accuracyType",93,35,79,37),HX_("simple",32,04,7f,b8),::hx::paccDynamic);
HXDLIN( 310)				goto _hx_goto_14;
            			}
            			if (  (_hx_switch_1==( (Float)(1) )) ){
HXLINE( 312)				::MainVariables_obj::_variables->__SetField(HX_("accuracyType",93,35,79,37),HX_("rating-based",c3,0b,e1,bc),::hx::paccDynamic);
HXDLIN( 312)				goto _hx_goto_14;
            			}
            			if (  (_hx_switch_1==( (Float)(2) )) ){
HXLINE( 314)				::MainVariables_obj::_variables->__SetField(HX_("accuracyType",93,35,79,37),HX_("complex",30,66,71,83),::hx::paccDynamic);
HXDLIN( 314)				goto _hx_goto_14;
            			}
            			_hx_goto_14:;
HXLINE( 317)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 317)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 317)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 300)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("combo+",1d,1c,26,c7)) ){
HXLINE( 289)			::MainVariables_obj::_variables->__SetField(HX_("comboP",42,1c,26,c7),!(( (bool)(::MainVariables_obj::_variables->__Field(HX_("comboP",42,1c,26,c7),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 291)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 291)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 291)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 288)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("cutscene",8a,1c,09,fa)) ){
HXLINE( 293)			::MainVariables_obj::_variables->__SetField(HX_("cutscene",8a,1c,09,fa),!(( (bool)(::MainVariables_obj::_variables->__Field(HX_("cutscene",8a,1c,09,fa),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 295)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 295)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 295)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 292)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("lateD",5e,b6,bc,6f)) ){
HXLINE( 297)			::MainVariables_obj::_variables->__SetField(HX_("lateD",5e,b6,bc,6f),!(( (bool)(::MainVariables_obj::_variables->__Field(HX_("lateD",5e,b6,bc,6f),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 299)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 299)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 299)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 296)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("page",4f,da,51,4a)) ){
            			HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            			void _hx_run( ::flixel::FlxSprite spr){
            				HX_STACKFRAME(&_hx_pos_f754181c32c7f7b3_269_changePress)
HXLINE( 270)				spr->animation->play(HX_("idle",14,a7,b3,45),null(),null(),null());
HXLINE( 271)				::flixel::tweens::FlxTween_obj::tween(spr, ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("x",78,00,00,00),-1000)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1, ::PAGE4settings,_gthis,int,Change) HXARGC(1)
            			void _hx_run( ::flixel::util::FlxTimer tmr){
            				HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_279_changePress)
HXLINE( 279)				if ((Change == 1)) {
HXLINE( 280)					 ::PAGE4settings _gthis1 = _gthis;
HXDLIN( 280)					_gthis1->openSubState( ::PAGE5settings_obj::__alloc( HX_CTX ));
            				}
            				else {
HXLINE( 282)					 ::PAGE4settings _gthis1 = _gthis;
HXDLIN( 282)					_gthis1->openSubState( ::PAGE3settings_obj::__alloc( HX_CTX ));
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 264)			 ::Dynamic _hx_tmp = ::hx::ClassOf< ::SettingsState >();
HXDLIN( 264)			::SettingsState_obj::page = (::SettingsState_obj::page + Change);
HXLINE( 265)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 265)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 265)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 266)			this->selectedSomethin = true;
HXLINE( 268)			this->menuItems->forEach( ::Dynamic(new _hx_Closure_0()),null());
HXLINE( 274)			::flixel::tweens::FlxTween_obj::tween(this->ResultText, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 275)			::flixel::tweens::FlxTween_obj::tween(this->ExplainText, ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("alpha",5e,a7,96,21),0)),((Float)0.15), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("ease",ee,8b,0c,43),::flixel::tweens::FlxEase_obj::expoIn_dyn())));
HXLINE( 277)			 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_1(_gthis,Change)),null());
HXLINE( 263)			goto _hx_goto_13;
            		}
            		if (  (_hx_switch_0==HX_("spam",c9,da,58,4c)) ){
HXLINE( 285)			::MainVariables_obj::_variables->__SetField(HX_("spamPrevention",19,9a,fd,87),!(( (bool)(::MainVariables_obj::_variables->__Field(HX_("spamPrevention",19,9a,fd,87),::hx::paccDynamic)) )),::hx::paccDynamic);
HXLINE( 287)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp = ::flixel::FlxG_obj::sound;
HXDLIN( 287)			::String _hx_tmp1 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 287)			_hx_tmp->play(_hx_tmp1,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
HXLINE( 284)			goto _hx_goto_13;
            		}
            		_hx_goto_13:;
HXLINE( 320)		 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_2()),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(PAGE4settings_obj,changePress,(void))

void PAGE4settings_obj::changeHold(::hx::Null< int >  __o_Change){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run( ::flixel::util::FlxTimer tmr){
            			HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_342_changeHold)
HXLINE( 342)			::MainVariables_obj::Save();
            		}
            		HX_END_LOCAL_FUNC1((void))

            		int Change = __o_Change.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_f754181c32c7f7b3_327_changeHold)
HXLINE( 328)		if ((this->optionShit->__get(this->curSelected) == HX_("offset",93,97,3f,60))) {
HXLINE( 331)			 ::Dynamic _hx_tmp = ::MainVariables_obj::_variables;
HXDLIN( 331)			_hx_tmp->__SetField(HX_("noteOffset",25,a5,53,fe),(_hx_tmp->__Field(HX_("noteOffset",25,a5,53,fe),::hx::paccDynamic) + Change),::hx::paccDynamic);
HXLINE( 332)			if (::hx::IsLess( ::MainVariables_obj::_variables->__Field(HX_("noteOffset",25,a5,53,fe),::hx::paccDynamic),-150 )) {
HXLINE( 333)				::MainVariables_obj::_variables->__SetField(HX_("noteOffset",25,a5,53,fe),-150,::hx::paccDynamic);
            			}
HXLINE( 334)			if (::hx::IsGreater( ::MainVariables_obj::_variables->__Field(HX_("noteOffset",25,a5,53,fe),::hx::paccDynamic),150 )) {
HXLINE( 335)				::MainVariables_obj::_variables->__SetField(HX_("noteOffset",25,a5,53,fe),150,::hx::paccDynamic);
            			}
HXLINE( 337)			 ::flixel::_hx_system::frontEnds::SoundFrontEnd _hx_tmp1 = ::flixel::FlxG_obj::sound;
HXDLIN( 337)			::String _hx_tmp2 = ::Paths_obj::sound(HX_("scrollMenu",4c,d4,18,06),null());
HXDLIN( 337)			_hx_tmp1->play(_hx_tmp2,(( (Float)(::MainVariables_obj::_variables->__Field(HX_("svolume",8d,82,77,0d),::hx::paccDynamic)) ) / ( (Float)(100) )),null(),null(),null(),null());
            		}
HXLINE( 340)		 ::flixel::util::FlxTimer_obj::__alloc( HX_CTX ,null())->start(((Float)0.2), ::Dynamic(new _hx_Closure_0()),null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(PAGE4settings_obj,changeHold,(void))

void PAGE4settings_obj::openSubState( ::flixel::FlxSubState SubState){
            	HX_STACKFRAME(&_hx_pos_f754181c32c7f7b3_348_openSubState)
HXDLIN( 348)		this->super::openSubState(SubState);
            	}



::hx::ObjectPtr< PAGE4settings_obj > PAGE4settings_obj::__new() {
	::hx::ObjectPtr< PAGE4settings_obj > __this = new PAGE4settings_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< PAGE4settings_obj > PAGE4settings_obj::__alloc(::hx::Ctx *_hx_ctx) {
	PAGE4settings_obj *__this = (PAGE4settings_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PAGE4settings_obj), true, "PAGE4settings"));
	*(void **)__this = PAGE4settings_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PAGE4settings_obj::PAGE4settings_obj()
{
}

void PAGE4settings_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(PAGE4settings);
	HX_MARK_MEMBER_NAME(menuItems,"menuItems");
	HX_MARK_MEMBER_NAME(optionShit,"optionShit");
	HX_MARK_MEMBER_NAME(grpSongs,"grpSongs");
	HX_MARK_MEMBER_NAME(selectedSomethin,"selectedSomethin");
	HX_MARK_MEMBER_NAME(curSelected,"curSelected");
	HX_MARK_MEMBER_NAME(camFollow,"camFollow");
	HX_MARK_MEMBER_NAME(ResultText,"ResultText");
	HX_MARK_MEMBER_NAME(ExplainText,"ExplainText");
	HX_MARK_MEMBER_NAME(pause,"pause");
	HX_MARK_MEMBER_NAME(camLerp,"camLerp");
	HX_MARK_MEMBER_NAME(acc,"acc");
	 ::flixel::FlxSubState_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void PAGE4settings_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(menuItems,"menuItems");
	HX_VISIT_MEMBER_NAME(optionShit,"optionShit");
	HX_VISIT_MEMBER_NAME(grpSongs,"grpSongs");
	HX_VISIT_MEMBER_NAME(selectedSomethin,"selectedSomethin");
	HX_VISIT_MEMBER_NAME(curSelected,"curSelected");
	HX_VISIT_MEMBER_NAME(camFollow,"camFollow");
	HX_VISIT_MEMBER_NAME(ResultText,"ResultText");
	HX_VISIT_MEMBER_NAME(ExplainText,"ExplainText");
	HX_VISIT_MEMBER_NAME(pause,"pause");
	HX_VISIT_MEMBER_NAME(camLerp,"camLerp");
	HX_VISIT_MEMBER_NAME(acc,"acc");
	 ::flixel::FlxSubState_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val PAGE4settings_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"acc") ) { return ::hx::Val( acc ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"pause") ) { return ::hx::Val( pause ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { return ::hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"camLerp") ) { return ::hx::Val( camLerp ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"grpSongs") ) { return ::hx::Val( grpSongs ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"menuItems") ) { return ::hx::Val( menuItems ); }
		if (HX_FIELD_EQ(inName,"camFollow") ) { return ::hx::Val( camFollow ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"optionShit") ) { return ::hx::Val( optionShit ); }
		if (HX_FIELD_EQ(inName,"ResultText") ) { return ::hx::Val( ResultText ); }
		if (HX_FIELD_EQ(inName,"changeItem") ) { return ::hx::Val( changeItem_dyn() ); }
		if (HX_FIELD_EQ(inName,"changeHold") ) { return ::hx::Val( changeHold_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"curSelected") ) { return ::hx::Val( curSelected ); }
		if (HX_FIELD_EQ(inName,"ExplainText") ) { return ::hx::Val( ExplainText ); }
		if (HX_FIELD_EQ(inName,"changePress") ) { return ::hx::Val( changePress_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"openSubState") ) { return ::hx::Val( openSubState_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateResults") ) { return ::hx::Val( updateResults_dyn() ); }
		if (HX_FIELD_EQ(inName,"createResults") ) { return ::hx::Val( createResults_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"selectedSomethin") ) { return ::hx::Val( selectedSomethin ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val PAGE4settings_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"acc") ) { acc=inValue.Cast< Float >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"pause") ) { pause=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"camLerp") ) { camLerp=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"grpSongs") ) { grpSongs=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"menuItems") ) { menuItems=inValue.Cast<  ::flixel::group::FlxTypedGroup >(); return inValue; }
		if (HX_FIELD_EQ(inName,"camFollow") ) { camFollow=inValue.Cast<  ::flixel::FlxObject >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"optionShit") ) { optionShit=inValue.Cast< ::Array< ::String > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ResultText") ) { ResultText=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"curSelected") ) { curSelected=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ExplainText") ) { ExplainText=inValue.Cast<  ::flixel::text::FlxText >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"selectedSomethin") ) { selectedSomethin=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void PAGE4settings_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("menuItems",e1,15,e5,5c));
	outFields->push(HX_("optionShit",d5,2d,ee,91));
	outFields->push(HX_("grpSongs",d9,dc,c7,63));
	outFields->push(HX_("selectedSomethin",c8,ec,fb,99));
	outFields->push(HX_("curSelected",fb,eb,ab,32));
	outFields->push(HX_("camFollow",e0,6e,47,22));
	outFields->push(HX_("ResultText",4a,98,ea,b4));
	outFields->push(HX_("ExplainText",e4,d8,c2,94));
	outFields->push(HX_("pause",f6,d6,57,bd));
	outFields->push(HX_("camLerp",26,66,a1,d2));
	outFields->push(HX_("acc",41,f1,49,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo PAGE4settings_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(PAGE4settings_obj,menuItems),HX_("menuItems",e1,15,e5,5c)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(PAGE4settings_obj,optionShit),HX_("optionShit",d5,2d,ee,91)},
	{::hx::fsObject /*  ::flixel::group::FlxTypedGroup */ ,(int)offsetof(PAGE4settings_obj,grpSongs),HX_("grpSongs",d9,dc,c7,63)},
	{::hx::fsBool,(int)offsetof(PAGE4settings_obj,selectedSomethin),HX_("selectedSomethin",c8,ec,fb,99)},
	{::hx::fsInt,(int)offsetof(PAGE4settings_obj,curSelected),HX_("curSelected",fb,eb,ab,32)},
	{::hx::fsObject /*  ::flixel::FlxObject */ ,(int)offsetof(PAGE4settings_obj,camFollow),HX_("camFollow",e0,6e,47,22)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(PAGE4settings_obj,ResultText),HX_("ResultText",4a,98,ea,b4)},
	{::hx::fsObject /*  ::flixel::text::FlxText */ ,(int)offsetof(PAGE4settings_obj,ExplainText),HX_("ExplainText",e4,d8,c2,94)},
	{::hx::fsInt,(int)offsetof(PAGE4settings_obj,pause),HX_("pause",f6,d6,57,bd)},
	{::hx::fsFloat,(int)offsetof(PAGE4settings_obj,camLerp),HX_("camLerp",26,66,a1,d2)},
	{::hx::fsFloat,(int)offsetof(PAGE4settings_obj,acc),HX_("acc",41,f1,49,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *PAGE4settings_obj_sStaticStorageInfo = 0;
#endif

static ::String PAGE4settings_obj_sMemberFields[] = {
	HX_("menuItems",e1,15,e5,5c),
	HX_("optionShit",d5,2d,ee,91),
	HX_("grpSongs",d9,dc,c7,63),
	HX_("selectedSomethin",c8,ec,fb,99),
	HX_("curSelected",fb,eb,ab,32),
	HX_("camFollow",e0,6e,47,22),
	HX_("ResultText",4a,98,ea,b4),
	HX_("ExplainText",e4,d8,c2,94),
	HX_("pause",f6,d6,57,bd),
	HX_("camLerp",26,66,a1,d2),
	HX_("acc",41,f1,49,00),
	HX_("updateResults",ed,bd,c5,36),
	HX_("createResults",5a,31,9a,53),
	HX_("update",09,86,05,87),
	HX_("changeItem",a3,fa,08,20),
	HX_("changePress",f3,fb,4d,ee),
	HX_("changeHold",cf,fe,5b,1f),
	HX_("openSubState",5b,66,48,37),
	::String(null()) };

::hx::Class PAGE4settings_obj::__mClass;

void PAGE4settings_obj::__register()
{
	PAGE4settings_obj _hx_dummy;
	PAGE4settings_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("PAGE4settings",e8,ec,ca,73);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(PAGE4settings_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< PAGE4settings_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PAGE4settings_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PAGE4settings_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

